Search.setIndex({"docnames": ["api", "auto_examples/plot_pc_alg", "auto_examples/plot_score_alg", "auto_examples/prior_know_score", "conditional_independence", "constraint_causal_discovery", "generated/dodiscover.ContextBuilder", "generated/dodiscover.EquivalenceClass", "generated/dodiscover.Graph", "generated/dodiscover.cd.BaseConditionalDiscrepancyTest", "generated/dodiscover.cd.BregmanCDTest", "generated/dodiscover.cd.KernelCDTest", "generated/dodiscover.ci.BaseConditionalIndependenceTest", "generated/dodiscover.ci.CMITest", "generated/dodiscover.ci.CategoricalCITest", "generated/dodiscover.ci.ClassifierCITest", "generated/dodiscover.ci.ClassifierCMITest", "generated/dodiscover.ci.FisherZCITest", "generated/dodiscover.ci.GSquareCITest", "generated/dodiscover.ci.KernelCITest", "generated/dodiscover.ci.Oracle", "generated/dodiscover.ci.kernel_utils.compute_kernel", "generated/dodiscover.ci.kernel_utils.corrent_matrix", "generated/dodiscover.ci.kernel_utils.f_divergence_score", "generated/dodiscover.ci.kernel_utils.kl_divergence_score", "generated/dodiscover.ci.kernel_utils.von_neumann_divergence", "generated/dodiscover.ci.monte_carlo.generate_knn_in_subspace", "generated/dodiscover.ci.monte_carlo.restricted_nbr_permutation", "generated/dodiscover.constraint.ConditioningSetSelection", "generated/dodiscover.constraint.FCI", "generated/dodiscover.constraint.LearnSemiMarkovianSkeleton", "generated/dodiscover.constraint.LearnSkeleton", "generated/dodiscover.constraint.PC", "generated/dodiscover.context.Context", "generated/dodiscover.make_context", "generated/dodiscover.metrics.confusion_matrix_networks", "generated/dodiscover.metrics.structure_hamming_dist", "generated/dodiscover.metrics.toporder_divergence", "generated/dodiscover.toporder.CAM", "generated/dodiscover.toporder.DAS", "generated/dodiscover.toporder.NoGAM", "generated/dodiscover.toporder.SCORE", "generated/dodiscover.typing.Column", "generated/dodiscover.typing.NetworkxGraph", "generated/dodiscover.typing.SeparatingSet", "index", "installation", "tutorials/index", "tutorials/markovian/example-pc-algo", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/plot_pc_alg.rst", "auto_examples/plot_score_alg.rst", "auto_examples/prior_know_score.rst", "conditional_independence.rst", "constraint_causal_discovery.rst", "generated/dodiscover.ContextBuilder.rst", "generated/dodiscover.EquivalenceClass.rst", "generated/dodiscover.Graph.rst", "generated/dodiscover.cd.BaseConditionalDiscrepancyTest.rst", "generated/dodiscover.cd.BregmanCDTest.rst", "generated/dodiscover.cd.KernelCDTest.rst", "generated/dodiscover.ci.BaseConditionalIndependenceTest.rst", "generated/dodiscover.ci.CMITest.rst", "generated/dodiscover.ci.CategoricalCITest.rst", "generated/dodiscover.ci.ClassifierCITest.rst", "generated/dodiscover.ci.ClassifierCMITest.rst", "generated/dodiscover.ci.FisherZCITest.rst", "generated/dodiscover.ci.GSquareCITest.rst", "generated/dodiscover.ci.KernelCITest.rst", "generated/dodiscover.ci.Oracle.rst", "generated/dodiscover.ci.kernel_utils.compute_kernel.rst", "generated/dodiscover.ci.kernel_utils.corrent_matrix.rst", "generated/dodiscover.ci.kernel_utils.f_divergence_score.rst", "generated/dodiscover.ci.kernel_utils.kl_divergence_score.rst", "generated/dodiscover.ci.kernel_utils.von_neumann_divergence.rst", "generated/dodiscover.ci.monte_carlo.generate_knn_in_subspace.rst", "generated/dodiscover.ci.monte_carlo.restricted_nbr_permutation.rst", "generated/dodiscover.constraint.ConditioningSetSelection.rst", "generated/dodiscover.constraint.FCI.rst", "generated/dodiscover.constraint.LearnSemiMarkovianSkeleton.rst", "generated/dodiscover.constraint.LearnSkeleton.rst", "generated/dodiscover.constraint.PC.rst", "generated/dodiscover.context.Context.rst", "generated/dodiscover.make_context.rst", "generated/dodiscover.metrics.confusion_matrix_networks.rst", "generated/dodiscover.metrics.structure_hamming_dist.rst", "generated/dodiscover.metrics.toporder_divergence.rst", "generated/dodiscover.toporder.CAM.rst", "generated/dodiscover.toporder.DAS.rst", "generated/dodiscover.toporder.NoGAM.rst", "generated/dodiscover.toporder.SCORE.rst", "generated/dodiscover.typing.Column.rst", "generated/dodiscover.typing.NetworkxGraph.rst", "generated/dodiscover.typing.SeparatingSet.rst", "index.rst", "installation.md", "tutorials/index.rst", "tutorials/markovian/example-pc-algo.ipynb", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API", "PC algorithm for causal discovery from observational data without latent confounders", "Order-based algorithms for causal discovery from observational data without latent confounders", "Using prior knowledge in order-based algorithms for causal discovery", "<span class=\"section-number\">2. </span>Independence", "<span class=\"section-number\">1. </span>Constraint-based causal discovery", "dodiscover.ContextBuilder", "dodiscover.EquivalenceClass", "dodiscover.Graph", "dodiscover.cd.BaseConditionalDiscrepancyTest", "<span class=\"section-number\">3.3.1. </span>dodiscover.cd.BregmanCDTest", "<span class=\"section-number\">3.2.1. </span>dodiscover.cd.KernelCDTest", "dodiscover.ci.BaseConditionalIndependenceTest", "<span class=\"section-number\">2.1.1. </span>dodiscover.ci.CMITest", "dodiscover.ci.CategoricalCITest", "<span class=\"section-number\">2.5.1. </span>dodiscover.ci.ClassifierCITest", "<span class=\"section-number\">2.1.2. </span>dodiscover.ci.ClassifierCMITest", "<span class=\"section-number\">2.2.1. </span>dodiscover.ci.FisherZCITest", "<span class=\"section-number\">2.3.1. </span>dodiscover.ci.GSquareCITest", "<span class=\"section-number\">2.4.1. </span>dodiscover.ci.KernelCITest", "dodiscover.ci.Oracle", "dodiscover.ci.kernel_utils.compute_kernel", "dodiscover.ci.kernel_utils.corrent_matrix", "dodiscover.ci.kernel_utils.f_divergence_score", "dodiscover.ci.kernel_utils.kl_divergence_score", "dodiscover.ci.kernel_utils.von_neumann_divergence", "dodiscover.ci.monte_carlo.generate_knn_in_subspace", "dodiscover.ci.monte_carlo.restricted_nbr_permutation", "<span class=\"section-number\">1.5.1. </span>dodiscover.constraint.ConditioningSetSelection", "dodiscover.constraint.FCI", "dodiscover.constraint.LearnSemiMarkovianSkeleton", "dodiscover.constraint.LearnSkeleton", "dodiscover.constraint.PC", "dodiscover.context.Context", "dodiscover.make_context", "dodiscover.metrics.confusion_matrix_networks", "dodiscover.metrics.structure_hamming_dist", "dodiscover.metrics.toporder_divergence", "dodiscover.toporder.CAM", "dodiscover.toporder.DAS", "dodiscover.toporder.NoGAM", "dodiscover.toporder.SCORE", "dodiscover.typing.Column", "dodiscover.typing.NetworkxGraph", "dodiscover.typing.SeparatingSet", "<strong>dodiscover</strong>", "Installation", "Tutorials", "PC algorithm for causal discovery from observational data without latent confounders", "Examples and Tutorials using DoDiscover", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"dodiscov": [0, 1, 2, 3, 5, 46, 48, 50, 51, 53], "thi": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 15, 16, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 48, 51], "i": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 48], "applic": [0, 48], "program": 0, "interfac": [0, 9, 12], "refer": [0, 10, 11, 13, 20, 29, 30, 31, 32, 38, 39, 40, 41, 45], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 48, 53], "camelcas": 0, "name": [0, 2, 3, 6, 7, 29, 30, 31, 32, 33], "function": [0, 9, 10, 11, 12, 13, 15, 16, 21, 23, 24, 29, 30, 31, 32, 35, 38, 39, 40, 41, 53], "underscore_cas": 0, "group": [0, 4, 9, 10, 11], "themat": 0, "analysi": 0, "stage": [0, 5, 30], "rather": 0, "than": [0, 1, 2, 5, 13, 36, 48], "just": [0, 1, 4, 46], "data": [0, 6, 7, 8, 10, 11, 12, 13, 18, 20, 21, 22, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 45, 47, 49, 50, 53], "mani": [0, 4, 5, 45], "case": [0, 1, 3, 4, 5, 37, 38, 39, 40, 41, 48], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 27, 30, 31, 48, 53], "addit": [0, 2, 3, 5, 29, 32, 38, 39, 40, 41], "form": [0, 1, 2, 4, 5, 22, 33, 48], "apriori": [0, 1, 2], "knowledg": [0, 6, 30, 32, 33, 34, 38, 39, 40, 41, 48, 49], "dataset": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33, 48], "from": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 23, 24, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 46, 47, 49, 53], "differ": [0, 2, 4, 5, 9, 10, 11, 29, 30, 31, 32, 36, 45], "environ": [0, 4, 9, 10, 11], "all": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 45, 48, 49, 51], "pass": [0, 1, 2, 3, 10, 11, 20, 29, 32], "object": [0, 1, 2, 3, 6, 29, 30, 31, 32, 33, 34, 48, 53], "One": [0, 2, 4, 6, 33, 48], "should": [0, 1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 33, 39, 48], "us": [0, 1, 2, 4, 5, 6, 9, 10, 11, 13, 15, 16, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 45, 48, 53], "our": [0, 4, 45, 48], "builder": [0, 6], "make_context": [0, 1, 2, 3, 6, 33, 48, 53], "construct": [0, 1, 2, 3, 4, 48], "see": [0, 1, 2, 3, 4, 5, 10, 11, 13, 23, 24, 27, 29, 30, 31, 32, 45, 48], "doc": [0, 53], "more": [0, 1, 2, 4, 5, 10, 11, 13, 29, 30, 31, 32, 36, 45, 48], "inform": [0, 3, 5, 6, 10, 11, 13, 28, 30, 34, 50, 53], "we": [0, 1, 2, 3, 4, 5, 9, 10, 11, 30, 31, 33, 36, 45, 47, 48, 53], "defin": [0, 4, 13, 21, 30, 31, 33, 36, 37, 38, 39, 40, 41], "some": [0, 4, 28, 30, 31, 33, 49], "custom": 0, "allow": [0, 5, 28, 30, 38, 39, 40, 41], "3rd": 0, "parti": 0, "packag": [0, 45], "work": [0, 1, 6, 8, 33, 48], "mypi": 0, "experiment": [0, 5], "provid": [0, 1, 2, 6, 30, 38, 39, 40, 41, 45, 47, 48], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 22, 23, 24, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 45, 48], "discrep": [0, 9, 10, 11, 45, 50, 53], "also": [0, 1, 3, 4, 5, 11, 21, 30, 45], "known": [0, 4, 5, 20, 25, 32, 33, 36, 45], "among": [0, 4, 5, 10, 11, 21, 33], "variabl": [0, 1, 2, 3, 4, 5, 6, 11, 20, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 48], "core": [0, 5, 48], "part": 0, "infer": [0, 2, 3, 5, 6, 20, 22, 29, 30, 31, 32, 38, 39, 45, 48], "procedur": [0, 2, 10, 31], "other": [0, 1, 2, 4, 5, 11, 30, 31, 33, 48], "includ": [0, 1, 2, 3, 6, 33, 38, 39, 40, 41, 53], "support": [0, 10, 11, 33, 34, 38, 39, 40, 41, 46], "mont": 0, "carlo": 0, "click": [1, 2, 3], "here": [1, 2, 3, 4, 5, 13, 48, 49, 53], "download": [1, 2, 3, 49], "full": [1, 2, 3, 32], "exampl": [1, 2, 3, 4, 28, 30, 33, 36, 45, 48], "code": [1, 2, 3, 49], "model": [1, 2, 3, 4, 5, 10, 11, 20, 30, 31, 38, 39, 40, 41, 45, 48], "scm": [1, 2, 50], "demonstr": [1, 2, 48, 49], "how": [1, 2, 3, 5, 30, 31, 45, 48, 49], "The": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 47, 48], "when": [1, 4, 5, 13, 28, 30, 33, 47, 48, 51], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 47, 48, 51], "unobserv": [1, 6, 33, 48], "That": [1, 5, 36], "mean": [1, 2, 4, 5, 11, 29, 30, 31, 32, 48], "ani": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 48], "set": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 48, 50, 53], "common": [1, 48], "caus": [1, 48, 53], "In": [1, 2, 3, 4, 5, 11, 13, 27, 37, 39, 40, 41, 48, 53], "word": [1, 5, 48], "exogen": 1, "assum": [1, 2, 5, 13, 29, 32, 38, 39, 40, 41], "author": [1, 2], "adam": [1, 53], "li": [1, 39, 40, 41, 53], "adam2392": 1, "gmail": [1, 2], "com": [1, 2, 29, 46], "licens": [1, 2], "bsd": [1, 2], "3": [1, 2, 3, 4, 5, 15, 16, 31, 32, 34, 38, 39, 40, 41, 46, 48], "claus": [1, 2], "import": [1, 2, 3, 4, 13, 48], "numpi": [1, 2, 3, 48], "np": [1, 2, 3, 13, 35, 38, 39, 40, 41, 48], "networkx": [1, 2, 3, 7, 8, 29, 32, 33, 45, 48, 53], "nx": [1, 2, 3, 20, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 48], "scipi": [1, 2, 3, 13], "stat": [1, 2, 3, 11, 17, 18, 19], "pywhy_graph": [1, 2, 3, 5, 48], "viz": [1, 2, 3, 48], "draw": [1, 2, 3, 48], "ci": [1, 4, 5, 10, 29, 30, 31, 32, 48, 50, 53], "gsquarecitest": [1, 48, 50], "oracl": [1, 48], "panda": [1, 2, 3, 29, 32], "pd": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 38, 39, 40, 41, 53], "dowhi": [1, 2, 3], "gcm": [1, 2, 3], "util": [1, 2, 3, 6, 45], "gener": [1, 2, 3, 4, 5, 9, 10, 11, 13, 15, 16, 26, 48, 49, 53], "set_random_se": [1, 2, 3], "first": [1, 2, 3, 5, 13, 22, 25, 30, 46, 47, 48], "start": [1, 2, 3, 6, 33], "induc": [1, 2, 3, 48], "graph": [1, 2, 3, 5, 6, 7, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 53], "which": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 21, 28, 29, 30, 31, 32, 33, 35, 40, 48, 53], "can": [1, 2, 3, 4, 5, 11, 13, 21, 24, 26, 28, 29, 30, 31, 32, 33, 36, 45, 48, 49], "visual": [1, 2, 3, 30, 48], "due": [1, 2, 5, 48], "markov": [1, 5, 20, 48], "assumpt": [1, 2, 3, 4, 6, 30, 31, 33, 38, 39, 40, 41, 47, 48, 50], "d": [1, 2, 5, 20, 24, 25, 28, 30, 39, 40, 41, 48, 53], "separ": [1, 5, 20, 28, 29, 30, 31, 32, 48, 53], "examin": 1, "condition": [1, 4, 9, 10, 15, 16], "random": [1, 2, 3, 4, 9, 10, 11, 13, 27], "seed": [1, 2, 3, 9, 10, 11, 13, 27, 48], "make": [1, 2, 3, 5, 47, 48], "reproduc": [1, 2, 3], "12345": [1, 2, 3], "rng": [1, 2, 3], "randomst": [1, 2, 3], "mycustommodel": [1, 2, 3], "predictionmodel": [1, 2, 3], "def": [1, 2, 3], "__init__": [1, 2, 3], "self": [1, 2, 3, 6, 33], "coeffici": [1, 2, 3, 38, 39, 40, 41], "fit": [1, 2, 3, 29, 30, 31, 32, 38, 39, 40, 41, 48], "x": [1, 2, 3, 4, 5, 9, 10, 11, 13, 21, 23, 28, 29, 30, 31, 32, 38, 39, 40, 41, 48], "y": [1, 2, 3, 4, 5, 9, 10, 11, 13, 21, 28, 29, 30, 31, 32], "noth": [1, 2, 3], "sinc": [1, 2, 3, 4, 53], "know": [1, 2, 3, 5, 30, 48], "ground": [1, 2, 3, 20, 37, 48], "truth": [1, 2, 3, 20, 37, 48], "predict": [1, 2, 3, 4, 9, 10, 11, 20, 30, 32, 35, 36, 40], "return": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "clone": [1, 2, 3, 46], "don": [1, 2, 3], "t": [1, 2, 3, 11, 13, 39, 40, 48], "realli": [1, 2, 3], "need": [1, 2, 3, 4, 32, 40, 48, 49], "actual": [1, 2, 3, 4], "1234": [1, 2, 3, 48], "result": [1, 2, 3, 5, 6, 30, 31, 34, 48], "z": [1, 2, 3, 4, 5, 13, 29, 30, 31, 32], "w": [1, 2, 3], "g": [1, 2, 3, 4, 5, 39, 40, 41, 48], "digraph": [1, 2, 3, 6, 20, 36, 37, 38, 39, 40, 41, 43, 48], "causal_model": [1, 2, 3], "probabilisticcausalmodel": [1, 2, 3], "set_causal_mechan": [1, 2, 3], "scipydistribut": [1, 2, 3], "binom": [1, 2, 3], "p": [1, 2, 3, 4, 9, 10, 11, 13, 17, 18, 19, 23, 24, 29, 30, 31, 32, 37, 39, 40, 41, 48], "0": [1, 2, 3, 4, 9, 10, 13, 15, 16, 20, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 45, 48, 51], "5": [1, 2, 3, 4, 5, 13, 16, 39, 40, 48], "n": [1, 2, 3, 22, 24, 29, 30, 31, 32, 48], "1": [1, 2, 3, 4, 5, 9, 10, 11, 13, 15, 16, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 45, 48, 51], "9": [1, 2, 3, 5, 20, 30, 32, 48], "additivenoisemodel": [1, 2, 3], "prediction_model": [1, 2, 3], "noise_model": [1, 2, 3], "8": [1, 2, 3, 5, 46], "would": [1, 2, 3, 4, 5, 28, 36, 48], "paramet": [1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41], "do": [1, 2, 3, 5], "anyth": [1, 2, 3], "method": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 53], "onli": [1, 2, 3, 4, 5, 10, 11, 15, 16, 27, 29, 30, 31, 32, 35, 36, 40, 48], "ensur": [1, 2, 3, 48], "each": [1, 2, 3, 4, 5, 9, 10, 11, 13, 15, 16, 21, 26, 27, 29, 30, 31, 32, 33, 40, 48], "fcm": [1, 2, 3], "correct": [1, 2, 3, 4, 48], "local": [1, 2, 3, 32, 48], "hash": [1, 2, 3, 33], "e": [1, 2, 3, 4, 5, 11, 13, 29, 30, 31, 32, 37, 38, 39, 40, 41, 46, 48], "get": [1, 2, 3, 7, 8, 33], "inconsist": [1, 2, 3], "error": [1, 2, 3, 4, 11, 48], "modifi": [1, 2, 3], "afterward": [1, 2, 3], "updat": [1, 2, 3, 33, 53], "have": [1, 2, 3, 4, 5, 7, 8, 29, 32, 33, 36, 48, 53], "empti": [1, 2, 3, 4, 5, 6, 11, 30, 31, 33], "small": [1, 2, 3], "workaround": [1, 2, 3], "pre": [1, 2, 3, 53], "datafram": [1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 38, 39, 40, 41], "column": [1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 33, 35, 48], "sampl": [1, 2, 3, 4, 9, 10, 11, 13, 15, 16, 21, 23, 24, 26, 27, 29, 32, 38, 39, 40, 41, 45, 48, 53], "draw_sampl": [1, 2, 3], "num_sampl": [1, 2, 3], "500": [1, 2, 3], "print": [1, 2, 3, 48], "head": [1, 2, 3, 48], "seri": [1, 2, 3, 48], "col": [1, 2, 3], "uniqu": [1, 2, 3], "4": [1, 2, 3, 4, 5, 23, 24, 39, 40, 48], "00": [1, 2, 3], "": [1, 2, 3, 5, 15, 16, 29, 30, 32, 33, 35, 45, 48, 51], "mechan": [1, 2, 3], "node": [1, 2, 3, 5, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41], "100": [1, 2, 3, 13, 16], "1827": 1, "78it": 1, "2": [1, 2, 3, 4, 5, 13, 20, 22, 30, 31, 32, 34, 35, 39, 40, 41, 48], "row": [1, 2, 3, 4, 29, 32, 35], "dtype": [1, 2, 3, 9, 10, 11, 21, 22, 23, 24, 25, 26, 27, 35, 38, 39, 40, 41], "graphviz": 1, "0x7f2f0782b130": 1, "To": [1, 5, 30, 34, 40, 45, 46, 48, 49], "constraint": [1, 6, 9, 12, 38, 39, 40, 41, 45, 48, 50, 53], "base": [1, 7, 8, 9, 12, 13, 15, 16, 29, 32, 34, 38, 39, 40, 41, 45, 48, 49, 50, 53], "wai": [1, 5, 6, 9, 10, 30, 31, 36, 48], "There": [1, 4, 5, 27, 30, 31, 48], "variou": [1, 4, 30, 31, 48], "evalu": [1, 39, 40, 41, 48], "If": [1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 48], "appli": [1, 2, 5, 6, 11, 29, 32, 38, 39, 40, 41, 48], "real": [1, 48], "want": [1, 48], "best": [1, 48], "suit": [1, 4, 48, 53], "note": [1, 2, 4, 5, 10, 11, 13, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 51], "becaus": [1, 4, 5, 28, 48], "finit": [1, 2, 4, 48], "size": [1, 2, 13, 29, 30, 31, 32, 48], "bound": [1, 4, 11, 23, 24, 37], "incorrect": [1, 36, 48], "orient": [1, 5, 7, 29, 30, 32, 36, 48, 53], "edg": [1, 2, 5, 6, 7, 8, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 48], "interest": [1, 5, 48], "ideal": [1, 48], "imbu": [1, 48], "queri": [1, 5, 20, 26, 48], "statement": [1, 5, 20, 48], "help": [1, 4, 48], "one": [1, 2, 4, 5, 28, 29, 30, 31, 32, 34, 36, 48], "determin": [1, 4, 9, 10, 13, 29, 30, 32, 48], "what": [1, 4, 25, 32, 45, 48, 51], "ci_estim": [1, 29, 30, 31, 32, 48], "data_typ": [1, 18, 48], "discret": [1, 50], "pywhi": [1, 2, 45, 46, 48, 53], "introduc": [1, 2, 48], "departur": [1, 2], "where": [1, 2, 4, 5, 9, 10, 11, 13, 15, 16, 23, 24, 31, 32, 36, 48], "user": [1, 2, 3, 5, 33, 45, 48], "primari": [1, 2, 48], "input": [1, 2, 30, 37, 38, 39, 40, 41, 48], "problem": [1, 2, 4, 15, 16, 29, 32, 38, 39, 40, 41, 48], "approach": [1, 2, 3, 5, 10, 11, 30, 50], "encourag": [1, 2, 45, 48], "novic": [1, 2], "philosoph": [1, 2, 48], "stone": [1, 2, 48], "convert": [1, 2, 4, 7, 8, 9, 12, 13, 15, 16, 32, 35, 48], "relationship": [1, 2, 48], "With": [1, 2, 4], "mindset": [1, 2], "tend": [1, 2, 48], "surrend": [1, 2, 48], "task": [1, 2, 48], "domain": [1, 2, 3, 6, 33, 48], "specif": [1, 2, 7, 8, 9, 12, 29, 30, 31, 32, 45, 48], "enabl": [1, 2, 9, 12, 39, 40, 41, 48], "identifi": [1, 2, 48], "contrast": [1, 2], "kei": [1, 2, 29, 30, 31, 32, 48], "strength": [1, 2, 48], "guid": [1, 2, 45, 48], "specifi": [1, 2, 3, 5, 48], "up": [1, 2, 48], "front": [1, 2, 48], "dag": [1, 2, 3, 5, 29, 32, 36, 38, 39, 40, 41, 45, 48], "befor": [1, 2, 29, 30, 31, 32, 38, 40, 41, 48], "ad": [1, 2, 48], "address": [1, 2, 48], "given": [1, 2, 4, 5, 9, 10, 15, 16, 20, 22, 28, 29, 30, 31, 32, 35, 37, 39, 48], "those": [1, 2, 5, 35, 48], "sens": [1, 2, 32], "hous": [1, 2, 48], "both": [1, 2, 4, 11, 33, 40, 48], "relev": [1, 2, 34, 45, 48], "mai": [1, 2, 4, 5, 27, 29, 35, 48], "downstream": [1, 2, 48], "build": [1, 2, 3, 6, 10, 11, 33, 34, 45, 48], "altern": [1, 2, 4, 5, 31, 48], "could": [1, 2, 5, 48], "sai": [1, 36], "fix": [1, 2, 13, 48, 51, 52, 53], "necessarili": [1, 4], "pure": 1, "cpdag": [1, 5, 32, 48], "therefor": [1, 10, 11, 30, 36], "caution": 1, "thei": [1, 4, 5, 20, 22, 31, 32], "leverag": [1, 4, 5], "id": [1, 39, 40], "estim": [1, 2, 4, 9, 10, 11, 13, 16, 21, 22, 24, 29, 32, 33, 39, 40, 41], "block": [1, 2], "python": [1, 2, 3, 45, 46, 49], "included_edg": [1, 2, 3, 6, 33], "now": [1, 2, 3, 5, 30, 48], "readi": [1, 2, 48], "show": [1, 3, 5, 48], "output": [1, 2, 3, 5, 38, 39, 40, 41, 48], "scenario": [1, 48], "infinit": [1, 2, 4, 48], "amount": [1, 4, 48], "complet": [1, 4, 5, 28, 29, 30, 31, 32, 37, 48], "partial": [1, 2, 5, 6, 29, 45, 48, 50], "direct": [1, 2, 3, 4, 5, 7, 30, 33, 36, 37, 38, 39, 40, 41, 45, 48, 53], "acycl": [1, 2, 5, 30, 37, 45, 48], "equival": [1, 4, 5, 7, 32, 39, 48], "encod": [1, 3, 29, 30, 31, 38, 39, 40, 41, 48], "depend": [1, 4, 5, 13, 29, 30, 31, 32, 48, 53], "were": [1, 48], "graph_": [1, 2, 3, 32, 48], "dot_graph": [1, 2, 3], "render": [1, 2, 3], "outfil": [1, 2, 3], "oracle_cpdag": 1, "png": [1, 2, 3], "view": [1, 2, 3, 9, 10, 13, 48], "true": [1, 2, 3, 4, 15, 19, 21, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 48], "perform": [1, 2, 4, 27, 38, 39, 40, 41, 48], "hypothesi": [1, 2, 4, 5, 9, 10, 11, 31, 32, 38, 39, 40, 41, 48], "presenc": [1, 5, 29, 48], "nois": [1, 2, 3, 38, 39, 40, 41, 48], "alwai": [1, 48], "possibl": [1, 5, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 48], "mistak": [1, 36, 48], "fail": [1, 4, 5], "find": [1, 2, 38, 39, 40, 41, 45], "between": [1, 3, 4, 7, 8, 11, 20, 21, 25, 28, 29, 30, 32, 36, 48], "correspond": [1, 2, 5, 13, 21, 24, 33], "collid": [1, 5, 28, 29, 30, 32, 48], "illustr": [1, 3, 45], "implicit": [1, 38, 39, 40, 41], "type": [1, 4, 7, 8, 15, 16, 33, 34, 35, 36, 45, 48, 53], "ii": 1, "ci_cpdag": 1, "total": [1, 2, 3], "time": [1, 2, 3, 9, 10, 11, 13, 39], "script": [1, 2, 3], "minut": [1, 2, 3], "146": 1, "second": [1, 2, 3, 5, 22, 25, 30], "sourc": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 49], "plot_pc_alg": 1, "py": [1, 2, 3, 46], "jupyt": [1, 2, 3, 49], "notebook": [1, 2, 3, 49], "ipynb": [1, 2, 3], "galleri": [1, 2, 3, 49], "sphinx": [1, 2, 3, 49], "score": [2, 3, 4, 9, 10, 11, 23, 24, 39, 40, 53], "easili": 2, "adapt": [2, 4, 13], "cam": [2, 3, 39, 40, 41, 53], "da": [2, 3, 53], "nogam": [2, 3, 53], "two": [2, 4, 5, 7, 8, 10, 11, 25, 28, 29, 30, 31, 32, 33, 36], "step": [2, 6, 15, 16, 33, 38, 39, 40, 41], "topolog": [2, 37, 38, 39, 40, 41], "repres": [2, 5, 45, 48], "fulli": [2, 7, 8, 38, 39, 40, 41], "connect": [2, 3, 5, 7, 8, 38, 39, 40, 41], "everi": [2, 29, 30, 31, 32, 36], "incom": 2, "its": [2, 5, 29, 30, 31, 32], "predecessor": [2, 7], "prune": [2, 38, 39, 40, 41], "select": [2, 5, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 53], "alreadi": 2, "suffici": [2, 4, 5, 32], "effect": [2, 4, 11, 48, 49], "nevertheless": 2, "justifi": 2, "fact": [2, 4], "oper": [2, 29], "sparser": 2, "statist": [2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 38, 39, 40, 41, 48], "effici": [2, 4, 39, 40, 41, 45, 51, 52, 53], "four": [2, 5], "follow": [2, 4, 5, 24, 25, 48], "permut": [2, 4, 15, 16, 27], "maxim": [2, 48], "log": [2, 4, 13, 24, 25, 39, 40, 41], "likelihood": [2, 39, 40, 41], "after": [2, 38, 39, 40, 41], "done": [2, 33], "regress": [2, 11, 38, 39, 40, 41], "particular": 2, "j": [2, 4, 22, 24, 29, 38, 39, 40, 41], "covari": [2, 9, 10, 11, 13, 26], "test": [2, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33, 38, 39, 40, 41, 45, 53], "parent": [2, 29, 32, 39], "while": [2, 13, 31, 39, 40, 48], "inherit": 2, "hessian": [2, 39, 40, 41], "matrix": [2, 20, 21, 22, 25, 35, 36, 38, 39, 40, 41, 53], "Then": [2, 4, 5, 13, 38, 39, 40, 41, 46], "leaf": [2, 38, 40, 41], "children": 2, "take": [2, 5, 15, 16, 30, 35, 48], "argmin": 2, "varianc": [2, 13, 41], "over": [2, 7, 8, 29, 32, 34, 35, 38, 39, 40, 41], "diagon": [2, 39, 40, 41], "element": 2, "onc": [2, 5, 35], "found": 2, "remov": [2, 7, 8, 53], "iter": [2, 7, 8, 29, 30, 31, 32, 38, 40, 41], "repeat": [2, 27], "evantu": 2, "assign": 2, "posit": [2, 4, 37, 38, 39, 40, 41], "let": 2, "h": [2, 30, 39, 40, 41], "pair": [2, 4, 5, 28, 29, 32], "satisfi": 2, "ab": 2, "vanish": 2, "verifi": [2, 3], "final": [2, 27, 39], "spars": [2, 38, 39, 40, 41], "further": [2, 48], "reduc": [2, 39], "number": [2, 4, 9, 10, 11, 13, 21, 22, 26, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41], "fals": [2, 4, 15, 16, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41], "sparsiti": 2, "linear": 2, "comput": [2, 4, 11, 13, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 48], "complex": [2, 9, 10, 11, 21, 22, 23, 24, 25, 26, 27, 39], "seen": [2, 13, 30, 31, 48], "version": [2, 45, 51], "better": [2, 5], "scale": [2, 38, 39, 40, 41], "properti": [2, 5, 7, 8, 20], "doe": [2, 3, 4, 5, 30, 35], "distribut": [2, 4, 5, 9, 10, 11, 13, 15, 16, 23, 24, 29, 32, 39, 40, 41], "term": [2, 4, 10, 11, 22, 29, 38, 39, 40, 41, 48], "wherea": 2, "requir": [2, 4, 28, 30, 31, 38, 39, 40, 41], "gaussian": [2, 21, 38, 39, 40, 41], "via": [2, 4, 13, 29, 36, 40, 46, 48, 53], "residu": [2, 40], "remain": 2, "v": [2, 7, 8], "tri": [2, 5, 27], "entri": [2, 39, 40, 41], "vector": 2, "gradient": [2, 23, 24, 39, 40, 41], "squar": [2, 4, 11], "francesco": [2, 39, 40, 41], "montagna": [2, 39, 40], "montagna997": 2, "topord": [2, 3, 53], "anm": [2, 3], "oracle_dag": [2, 3], "1636": 2, "80it": 2, "phase": [2, 5, 30], "accord": 2, "logarithm": 2, "joint": [2, 15, 16, 23, 24, 39, 40, 41], "minimum": [2, 29, 30, 31, 32, 39], "var": [2, 6, 33], "diag": 2, "admit": [2, 37], "choos": [2, 11, 27, 28, 50], "threshold": [2, 15, 16, 19, 38, 40, 41, 48], "valu": [2, 4, 11, 13, 15, 16, 17, 18, 19, 25, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 48], "associ": [2, 32, 37], "potenti": [2, 5, 28, 38, 39, 40, 41, 53], "For": [2, 3, 4, 5, 11, 13, 28, 29, 30, 31, 32, 36, 45, 48], "instanc": [2, 6, 33, 34, 35, 36], "consid": [2, 28, 29, 30, 31, 32, 36], "vertic": 2, "simplic": 2, "trivial": [2, 4], "adjac": [2, 29, 31, 32, 35, 36, 38, 39, 40, 41], "compat": [2, 37], "upper": [2, 4, 11, 23, 24], "triangular": 2, "triu": 2, "ones": [2, 31], "k": [2, 4, 11, 13, 15, 16, 22, 26, 27, 39, 40, 41, 45, 53], "abov": 2, "topoolog": 2, "consist": [2, 6, 20, 33, 36, 38, 48], "limit": [2, 29, 30, 31, 32], "might": [2, 5, 48], "faulti": 2, "order_graph": 2, "order_graph_": 2, "score_full_dag": 2, "represent": [2, 32, 39, 40, 41], "score_dag": 2, "849": 2, "plot_score_alg": 2, "exploit": [3, 39, 40, 41], "about": [3, 4, 38, 39, 40, 41, 45, 48], "without": [3, 5, 12, 18, 20, 27, 31, 33, 34, 41, 45, 49], "observ": [3, 4, 6, 12, 18, 20, 29, 31, 32, 33, 34, 41, 47, 49, 50, 53], "1888": 3, "05it": 3, "must": [3, 4, 5, 6, 10, 11, 29, 30, 31, 32, 34, 35, 36], "score_prior_includ": 3, "excluded_edg": [3, 6, 33], "appear": [3, 35], "score_prior_exclud": 3, "tutori": [3, 45, 48, 53], "solut": 3, "detail": [3, 27, 29, 30, 31, 32, 45], "886": 3, "prior_know_scor": 3, "probabilist": [4, 5], "realiz": 4, "affect": [4, 39], "It": [4, 5, 11, 13, 32, 36, 38, 39, 40, 41], "fundament": [4, 50], "notion": 4, "probabl": [4, 48], "glean": 4, "uncondit": 4, "margin": 4, "present": [4, 5, 32, 47, 48], "brief": 4, "overview": 4, "special": [4, 13], "frame": 4, "null": [4, 5, 9, 10, 11, 13, 31, 32, 48], "h_0": [4, 5, 11, 31], "perp": [4, 5, 11, 13, 30, 31, 32], "written": [4, 11], "similarli": [4, 40], "h_a": [4, 5], "neq": 4, "typic": [4, 11], "accept": [4, 32], "rate": 4, "alpha": [4, 5, 29, 30, 31, 32, 38, 39, 40, 41, 48], "05": [4, 19, 29, 30, 31, 32, 38, 39, 40, 41, 48], "either": [4, 29, 32, 36, 48], "attempt": 4, "character": [4, 32], "asymptot": 4, "pvalu": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32], "compar": [4, 29, 32, 35, 36, 45, 48, 53], "state": [4, 5, 6, 33, 34], "least": [4, 35], "extrem": 4, "By": [4, 13, 15, 16, 26, 29, 30, 31, 32], "reject": [4, 5], "claim": 4, "so": [4, 5, 27, 33, 48], "cannot": [4, 48], "strictli": 4, "speak": 4, "howev": [4, 5, 38, 39, 40, 41, 48], "practic": [4, 5], "causal": [4, 9, 12, 18, 20, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 49, 50, 53], "discoveri": [4, 6, 9, 12, 18, 20, 29, 30, 32, 33, 34, 38, 39, 40, 41, 45, 49, 50], "still": [4, 5], "conclud": [4, 5], "though": 4, "plausibl": 4, "weak": 4, "unabl": 4, "captur": [4, 6, 48], "propos": [4, 13], "reason": [4, 20, 39, 40, 48], "like": [4, 9, 10, 11, 34, 36, 48, 53], "most": [4, 29, 30, 31, 32, 48], "power": [4, 5], "mind": 4, "certain": [4, 29, 30, 32, 48], "underli": [4, 5, 13], "cmi": [4, 13, 16], "formul": 4, "math": 4, "int": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44], "frac": [4, 13, 24], "As": 4, "equal": [4, 10, 11, 13, 33, 37, 39, 40, 48], "exactli": [4, 48], "definit": [4, 23, 24, 30], "non": [4, 13, 33, 39, 50], "parametr": [4, 50], "thu": [4, 5], "unfortun": 4, "notori": 4, "difficult": 4, "literatur": [4, 5], "summar": 4, "kraskov": 4, "stogbauer": 4, "grassberg": 4, "ksg": 4, "nearest": [4, 13, 15, 16, 26, 27], "neighbor": [4, 7, 8, 13, 15, 16, 26, 27, 28, 29, 30, 31, 32, 38, 40, 41], "knn": [4, 26], "algorithm": [4, 5, 6, 8, 9, 12, 18, 20, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 45, 47, 49, 53], "wa": [4, 5, 53], "had": 4, "obtain": 4, "reli": [4, 30], "nn": 4, "implement": [4, 10, 11, 13, 29, 32, 39, 40, 41, 48, 53], "naiv": 4, "kdtree": [4, 26], "suffer": 4, "high": [4, 5, 13, 30, 38, 39, 40, 41], "dimens": [4, 5], "dimension": [4, 13, 30, 38, 39, 40, 41], "intellig": [4, 13, 29, 32], "manner": [4, 27], "worth": 4, "good": [4, 36], "variant": [4, 5, 30, 31], "forest": 4, "manifold": 4, "classif": [4, 15, 16, 53], "posterior": 4, "directli": [4, 6, 33], "plug": 4, "equat": [4, 40], "normal": [4, 35], "fast": [4, 5, 29], "attract": 4, "gaussiani": 4, "unrealist": 4, "chi": 4, "conting": 4, "tabl": 4, "level": [4, 5, 18, 29, 30, 31, 32], "across": 4, "exponenti": 4, "increas": [4, 39], "semi": [4, 30, 50], "idea": 4, "been": [4, 5, 27, 30, 31], "shown": [4, 5], "robust": [4, 50], "machin": [4, 11, 13, 39, 40, 41], "learn": [4, 10, 11, 13, 28, 29, 30, 31, 32, 33, 39, 40, 41, 45, 47, 48, 49, 50, 53], "field": 4, "anoth": [4, 5, 9, 10, 27], "shuffl": [4, 13, 15, 16, 27], "setup": 4, "intuit": [4, 20], "similar": [4, 33], "unshuffl": 4, "achiev": 4, "50": [4, 48, 53], "accuraci": [4, 39], "balanc": 4, "origin": [4, 15, 16], "uniformli": 4, "third": 4, "subspac": [4, 13, 15, 16, 26], "close": 4, "maintain": [4, 45], "exist": [4, 29, 30, 31, 32], "cd": [4, 46, 50, 53], "invari": [4, 5], "exhibit": 4, "question": [4, 5], "whether": [4, 9, 10, 21, 29, 30, 31, 32, 36, 48], "p_": 4, "p_i": [4, 9, 10], "denot": [4, 9, 10, 11, 34], "explicitli": [4, 38, 39, 40, 41], "come": 4, "indic": [4, 5, 9, 10, 11, 15, 16, 26, 27, 33, 48], "detect": [4, 5, 48], "kind": [4, 5, 48], "besid": 4, "entir": 4, "weight": [4, 9, 10, 11], "propens": [4, 9, 10, 11], "6": [4, 5, 48], "von": [4, 25], "neumann": [4, 25], "7": [4, 5], "independ": [5, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 45, 50, 53], "graphic": [5, 48], "under": [5, 30, 31, 39, 53], "faith": [5, 48], "well": [5, 33, 36, 45, 48], "intend": 5, "structur": [5, 6, 30, 31, 32, 33, 35, 36, 37, 45, 47, 48, 53], "check": [5, 7, 8, 20, 27, 28, 29, 30, 31, 32, 33, 53], "At": [5, 39], "varieti": 5, "themselv": 5, "section": 5, "impli": 5, "familiar": 5, "On": [5, 29], "hand": 5, "map": [5, 30, 31, 33], "accident": 5, "occur": 5, "theori": 5, "issu": 5, "theoret": 5, "violat": [5, 48], "diagram": 5, "measur": [5, 13], "zero": 5, "veri": [5, 9, 12, 48], "problemat": 5, "weakli": 5, "strong": 5, "frequent": 5, "almost": 5, "sure": 5, "higher": 5, "tackl": 5, "larg": [5, 13, 38, 40, 41, 48], "activ": 5, "area": 5, "research": [5, 13, 39, 40, 41, 45], "peter": [5, 20, 30, 32, 38, 39, 40, 41, 47], "clark": [5, 20, 30, 32, 47], "pc": [5, 12, 18, 20, 31, 34, 47, 49, 53], "sound": 5, "lack": 5, "latent": [5, 6, 12, 18, 20, 29, 30, 31, 33, 34, 41, 45, 49, 53], "confound": [5, 12, 18, 20, 29, 31, 32, 34, 41, 45, 49, 53], "three": [5, 34, 48], "skeleton": [5, 28, 29, 30, 31, 32, 53], "process": [5, 33], "along": 5, "trim": 5, "track": [5, 31], "A": [5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 29, 30, 31, 32, 37, 38, 39, 40, 41, 48], "contain": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 30, 31, 33], "unshield": 5, "triplet": 5, "path": [5, 28, 29, 30, 31], "star": 5, "endpoint": [5, 7, 36], "pag": [5, 29, 30, 36, 45], "circl": [5, 7, 36], "determinist": [5, 32], "logic": [5, 29, 32], "rule": [5, 29, 32, 53], "u": [5, 7, 8, 11, 39, 40, 41], "call": [5, 6, 29, 33, 34, 36], "meek": [5, 32], "repeatedli": 5, "until": 5, "chang": [5, 51, 52, 53], "made": 5, "fci": [5, 53], "ancestr": [5, 29, 45], "even": 5, "bia": [5, 13, 22, 29, 53], "few": 5, "minor": 5, "modif": 5, "outlin": [5, 10, 11], "compos": 5, "same": [5, 11, 21, 29, 32, 35, 36], "restart": 5, "scratch": 5, "chosen": [5, 27, 29, 32], "describ": 5, "add": [5, 6, 7, 8, 33, 46, 53], "six": 5, "account": [5, 29, 36], "access": [5, 34], "multipl": [5, 48], "improv": [5, 53], "target": [5, 33, 36], "psi": [5, 13], "briefli": 5, "strategi": [5, 28], "conserv": 5, "etc": 5, "creat": [6, 7, 8, 33, 34, 48, 53], "context": [6, 29, 30, 31, 32, 34, 38, 39, 40, 41, 45, 53], "ergonom": 6, "meant": 6, "sole": 6, "NOT": [6, 33], "instanti": [6, 33], "instead": [6, 33], "popul": [6, 35], "option": [6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 48], "union": [6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 42, 43, 44], "none": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44], "exclud": [6, 7, 33, 38, 39, 40, 41], "networkxgraph": [6, 37], "exclus": 6, "inclus": 6, "init_graph": [6, 33], "new": [6, 34, 45, 48, 51], "latent_vari": [6, 33], "float": [6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 44], "str": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 42, 44], "tupl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 42, 44], "default": [6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26, 27, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41], "neither": [6, 33], "nor": [6, 33], "presum": [6, 33], "observed_vari": [6, 33], "state_vari": [6, 33, 34], "persist": [6, 33], "intermedi": [6, 33], "dict": [6, 7, 29, 30, 31, 32, 33, 44], "list": [6, 11, 18, 29, 30, 31, 32, 33, 35, 37, 44, 45, 53], "arg": [7, 8], "kwarg": [7, 8], "protocol": [7, 8, 45], "attribut": [7, 8, 30, 31, 32, 33], "bidirected_edge_nam": 7, "bidirect": [7, 36], "circle_edge_nam": 7, "directed_edge_nam": 7, "excluded_tripl": 7, "tripl": 7, "undirected_edge_nam": 7, "undirect": [7, 8, 29, 30, 31, 32, 35, 36, 48], "add_edg": [7, 8], "edge_typ": [7, 8], "add_nod": [7, 8], "node_for_ad": [7, 8], "attr": [7, 8], "copi": [7, 8, 33, 34], "frozenset": [7, 33], "has_edg": [7, 8], "bool": [7, 8, 9, 10, 11, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41], "mark_unfaithful_tripl": 7, "v_i": 7, "v_j": 7, "mark": 7, "unfaith": 7, "put": 7, "orient_uncertain_edg": 7, "uncertain": 7, "point": [7, 13], "remove_edg": [7, 8], "remove_edges_from": [7, 8], "remove_nod": [7, 8], "subgraph": [7, 8, 36], "successor": 7, "to_undirect": [7, 8], "abstract": [9, 10, 12, 13, 14, 15, 17, 18], "condit": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 28, 29, 30, 31, 32, 35, 45, 50, 53], "expect": [9, 12], "lightweight": [9, 12], "anyon": [9, 12], "api": [9, 12, 20, 45, 51, 52, 53], "compute_nul": [9, 10, 11], "e_hat": [9, 10, 11], "_supportsarrai": [9, 10, 11, 21, 22, 23, 24, 25, 26, 27], "_nestedsequ": [9, 10, 11, 21, 22, 23, 24, 25, 26, 27], "byte": [9, 10, 11, 21, 22, 23, 24, 25, 26, 27], "null_rep": [9, 10, 11], "1000": [9, 10, 11, 13, 19, 29, 32], "random_st": [9, 10, 11, 15], "arrai": [9, 10, 11, 21, 22], "shape": [9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 27, 35, 38, 39, 40, 41], "n_sampl": [9, 10, 11, 20, 22, 26, 27, 38, 39, 40, 41], "group_ind": [9, 10, 11], "n_features_x": [9, 10, 11, 21], "n_features_i": [9, 10, 11, 21], "outcom": [9, 10, 11], "null_dist": [9, 10, 11], "df": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "y_var": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31], "group_col": [9, 10, 11], "x_var": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31], "try": [9, 10], "p_j": [9, 10], "belong": [9, 10, 11], "metric": [10, 11, 15, 16, 21, 22, 24, 53], "rbf": [10, 11, 19, 21, 22, 40], "distance_metr": [10, 11, 21, 22], "euclidean": [10, 11, 21, 22], "kwidth": [10, 21, 22], "n_job": [10, 11, 13, 16, 19, 21, 22, 26, 30, 31], "propensity_model": [10, 11], "propensity_est": [10, 11], "bregman": [10, 25, 50], "diverg": [10, 23, 24, 25, 37, 50], "kernel": [10, 11, 21, 22, 39, 40, 41, 50], "distanc": [10, 11, 21, 22, 36, 37, 53], "width": [10, 11, 21, 22], "kernel_util": 10, "compute_kernel": 10, "cpu": [10, 13, 26, 30, 31], "callabl": [10, 11, 15, 16, 29], "sklearn": [10, 11, 15, 16, 21, 33, 35, 40], "linear_model": [10, 11], "logisticregress": [10, 11], "predict_proba": [10, 11], "order": [10, 11, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 45, 48, 49], "http": [10, 11, 29, 30, 39, 40, 46], "scikit": [10, 11], "org": [10, 11, 29, 30, 46], "stabl": [10, 11], "glossari": [10, 11], "html": [10, 11], "array_lik": [10, 11, 15, 16, 21, 22, 23, 24, 25, 26, 27, 35], "n_group": [10, 11], "match": [10, 11, 39, 40, 41, 48], "cardin": [10, 11], "argument": [10, 11, 20, 29, 32, 36], "current": [10, 11, 28, 33, 36], "binari": [10, 11, 15, 16, 18, 36, 48, 50], "footbibliographi": 10, "rubric": 10, "l2": [11, 21], "kwidth_x": [11, 19], "kwidth_i": [11, 19], "distancemetr": 11, "pairwis": [11, 21, 29, 32], "regular": [11, 39, 40, 41], "invert": 11, "matric": [11, 25], "respect": [11, 13, 30, 37, 39], "singl": [11, 30, 36, 39], "minim": 11, "median": [11, 21], "job": [11, 21, 22], "run": [11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 28, 29, 30, 31, 32, 39, 46], "parallel": [11, 21, 22, 53], "junhyung": 11, "park": 11, "uri": 11, "shalit": 11, "bernhard": [11, 39, 40, 41], "sch": [11, 39, 40, 41], "\u00f6": [11, 39, 40, 41], "lkopf": [11, 39, 40, 41], "krikamol": 11, "muandet": 11, "treatment": 11, "embed": 11, "intern": [11, 13, 33, 39, 40, 41], "confer": [11, 13, 32, 39, 40, 41], "8401": 11, "8412": 11, "pmlr": [11, 13, 39, 40, 41], "2021": 11, "aris": 11, "collect": 11, "f": [11, 23, 24, 33, 48], "z_covari": [12, 13, 14, 15, 16, 17, 18, 19, 20], "standard": [12, 13, 14, 15, 16, 17, 18, 19, 36, 48], "transform": 13, "rank": 13, "n_shuffle_nbr": [13, 16], "n_shuffl": [13, 16], "random_se": [13, 16, 27], "mutual": [13, 50, 53], "smaller": [13, 48], "fraction": 13, "uniform": 13, "avail": [13, 28, 46], "within": [13, 21, 29, 36], "defaultrng": 13, "iiint": 13, "cdot": 13, "dx": 13, "dy": 13, "dz": 13, "henc": [13, 31], "widehat": 13, "sum_": [13, 22, 24], "k_": 13, "xz": 13, "yz": 13, "digamma": 13, "hyper": 13, "cube": 13, "around": [13, 48], "densiti": 13, "smooth": 13, "although": 13, "unlik": 13, "bandwidth": 13, "larger": [13, 39], "lower": [13, 37], "signific": [13, 29, 30, 31, 32, 48], "slightli": 13, "neg": [13, 37], "quantiti": 13, "continu": [13, 53], "jakob": 13, "rung": 13, "amo": 13, "storkei": 13, "fernando": 13, "perez": 13, "cruz": 13, "editor": [13, 39, 40, 41], "proceed": [13, 32, 39, 40, 41], "twenti": 13, "artifici": [13, 29, 32], "volum": [13, 20, 30, 32, 39, 40, 41], "84": 13, "938": 13, "947": 13, "09": 13, "11": [13, 30, 48], "apr": 13, "2018": 13, "lambda_": 14, "cressi": 14, "read": 14, "clf": [15, 16], "baseestim": [15, 16], "skorchmodel": 15, "accuracy_scor": 15, "bootstrap": [15, 16], "n_iter": [15, 16], "20": [15, 16, 39, 40, 53], "correct_bia": 15, "03": [15, 16], "test_siz": [15, 16], "generate_train_test_data": [15, 16], "train": [15, 16, 40], "ccit": [15, 16, 53], "x_train": [15, 16], "y_train": [15, 16], "x_test": [15, 16], "y_test": [15, 16], "compris": [15, 16], "f_divergence_scor": 16, "ep": [16, 24], "1e": [16, 19], "08": [16, 29], "correlation_matrix": 17, "kernel_x": 19, "kernel_i": 19, "kernel_z": 19, "null_siz": 19, "approx_with_gamma": 19, "kwidth_z": 19, "unit": 20, "n_variabl": 20, "judea": 20, "pearl": 20, "cambridg": 20, "univers": 20, "press": [20, 30, 32], "usa": 20, "2nd": [20, 39, 40], "edit": 20, "2009": 20, "isbn": [20, 30, 32], "052189560x": 20, "spirt": [20, 30, 32], "glymour": [20, 30, 32], "richard": [20, 30, 32, 39, 40, 41], "schein": [20, 30, 32], "causat": [20, 30, 32], "search": [20, 30, 32, 38, 39, 40, 41], "81": [20, 30, 32, 53], "mit": [20, 30, 32], "01": [20, 30, 32, 40], "1993": [20, 30, 32], "978": [20, 30, 32], "4612": [20, 30, 32], "7650": [20, 30, 32], "doi": [20, 29, 30, 32, 38, 39, 40, 41], "10": [20, 29, 30, 32, 38, 39, 40, 41, 48], "1007": [20, 30, 32], "2748": [20, 30, 32], "center": [21, 22], "n_samples_x": 21, "n_samples_i": 21, "string": 21, "pairwise_kernel": 21, "valid": [21, 30, 31, 40, 48], "pairwise_dist": 21, "featur": [21, 38, 39, 40, 41, 51, 52, 53], "med": 21, "correntropi": 22, "n_featur": [22, 25], "symmetr": [22, 35], "formula": [22, 24], "x_i": 22, "y_i": [22, 24], "y_j": [22, 24], "togeth": 22, "unbias": 22, "y_stat_q": [23, 24], "y_stat_p": [23, 24], "kl": [23, 24], "revers": [23, 24, 33, 37], "give": [23, 24], "sake": [23, 24], "descent": [23, 24], "d_": 23, "q": [23, 24], "le": [23, 39, 40, 41], "sup_f": 23, "e_": 23, "sim": 23, "exp": 23, "n_samples_q": [23, 24], "variat": [23, 24], "n_samples_p": [23, 24], "f_div": 23, "hat": 24, "_": 24, "l": [24, 48], "m": 24, "b": [25, 48], "psd": 25, "div": 25, "tr": 25, "z_arr": 26, "n_features_z": 26, "space": 26, "joblib": [26, 53], "nbr": [27, 28, 29, 30, 31, 32], "restrict": [27, 30, 31], "index": [27, 35, 45], "restricted_perm": 27, "goe": 27, "through": [27, 29, 32, 45], "look": [27, 45, 48, 49], "closest": 27, "next": 27, "replac": 27, "necessari": [27, 30], "enumer": [28, 30], "metaclass": 28, "combin": [28, 30, 31], "nbrs_path": 28, "neighbors_path": [28, 29, 31, 32], "simpl": [28, 33], "initi": [28, 30, 31, 32], "pds_path": [28, 29, 30], "lie": [28, 30], "baseconditionalindependencetest": [29, 30, 31, 32], "min_cond_set_s": [29, 30, 31, 32], "max_cond_set_s": [29, 30, 31, 32], "max_combin": [29, 30, 31, 32], "condsel_method": [29, 30, 31, 32], "conditioningsetselect": [29, 30, 31, 32, 50], "apply_orient": [29, 32], "keep_sort": [29, 30, 31, 32], "max_it": [29, 32], "max_path_length": [29, 30], "selection_bia": 29, "pds_condsel_method": 29, "keyword": [29, 32], "constrain": [29, 32, 48], "spent": [29, 30, 31, 32], "maximum": [29, 30, 31, 32, 39], "increment": [29, 30, 31, 32], "control": [29, 30, 31, 32, 50], "conjunct": [29, 30, 31, 32, 33], "strongest": [29, 30, 31, 32], "per": [29, 30, 31, 32], "zhang": [29, 39, 40], "r0": [29, 32], "arrowhead": [29, 32], "tail": 29, "keep": [29, 30, 31, 32], "sort": [29, 30, 31, 32, 35], "weakest": [29, 30, 31, 32], "largest": [29, 30, 31, 32], "lowest": [29, 30, 31, 32], "lexograph": [29, 32], "ith": [29, 32], "pa": [29, 32], "length": [29, 30], "discrimin": [29, 30], "unlimit": [29, 30], "realiti": 29, "quit": 29, "expens": 29, "jiji": 29, "172": 29, "16": [29, 30, 53], "1873": 29, "1896": 29, "2008": 29, "url": [29, 30, 39, 40], "www": 29, "sciencedirect": 29, "scienc": 29, "articl": 29, "pii": 29, "s0004370208001008": 29, "1016": 29, "artint": 29, "001": [29, 39, 40, 41], "convert_skeleton_graph": [29, 32], "evaluate_edg": [29, 30, 31, 32], "test_stat": [29, 30, 31, 32], "constitut": [29, 32], "endogen": [29, 32], "dictionari": [29, 30, 31, 32, 33, 34], "rais": [29, 32, 33], "runtimeerror": [29, 32, 33], "impos": [29, 32], "constructor": [29, 32], "learn_skeleton": [29, 32], "sep_set": [29, 30, 31, 32], "skel_graph": [29, 32], "exhaust": [29, 31, 32, 45], "orient_edg": [29, 32], "equivalenceclass": [29, 32], "notimplementederror": 29, "orient_unshielded_tripl": [29, 32], "separatingset": [29, 32], "second_stage_condsel_method": 30, "markovian": [30, 31, 50], "proce": [30, 31], "candid": [30, 36], "possibli": 30, "learnskeleton": [30, 53], "superset": 30, "figur": 30, "17": [30, 39, 40, 41], "18": 30, "rfci": [30, 31], "paper": [30, 31], "diego": 30, "colombo": 30, "marlo": 30, "maathui": 30, "marku": 30, "kalisch": 30, "thoma": 30, "richardson": 30, "annal": [30, 38, 39, 40, 41], "40": 30, "294": 30, "321": 30, "2012": 30, "1214": [30, 38, 39, 40, 41], "aos940": 30, "adj_graph_": [30, 31], "discov": [30, 31, 32, 48], "store": [30, 31, 33, 41], "smallest": [30, 31], "encount": [30, 31], "sep_set_": [30, 31], "context_": [30, 31], "min_cond_set_size_": [30, 31], "max_cond_set_size_": [30, 31], "max_combinations_": [30, 31], "n_iters_": [30, 31], "max_path_length_": 30, "th": 30, "rememb": 31, "link": [31, 51], "essenti": 31, "sg": 31, "tradit": 31, "christoph": 32, "explan": 32, "background": 32, "eleventh": 32, "uncertainti": 32, "montreal": 32, "qu": 32, "02": 32, "2013": [32, 38, 39, 40, 41], "separating_sets_": 32, "nest": [32, 33], "being": 32, "These": [32, 47], "rest": 32, "_protocol": 33, "num_distribut": 33, "obs_distribut": 33, "intervention_target": 33, "factori": [33, 53], "symmetric_diff_map": 33, "sigma_map": 33, "f_node": 33, "dure": [33, 40], "intervent": [33, 50], "unknown": 33, "valueerror": 33, "prior": [33, 34, 38, 39, 40, 41, 49], "alongsid": 33, "priori": [33, 48], "explicit": [33, 38, 39, 40, 41, 49], "yet": 33, "ill": 33, "leav": [33, 40], "isomorph": 33, "is_isomorph": [33, 48], "__hash__": 33, "add_state_vari": 33, "deepcopi": 33, "get_non_f_nod": 33, "get_param": 33, "deep": 33, "todo": 33, "pipelin": 33, "subobject": 33, "param": 33, "reverse_sigma_map": 33, "sigma": 33, "set_param": 33, "latter": 33, "compon": 33, "__": 33, "learner": [33, 53], "on_miss": 33, "warn": [33, 48], "ignor": 33, "behavior": [33, 48], "userwarn": 33, "state_var": 33, "create_us": 34, "context_build": 34, "contextbuild": [34, 53], "dataclass": 34, "metadata": 34, "except": [34, 48], "again": 34, "true_graph": [35, 36, 37], "pred_graph": [35, 36], "label": 35, "ndarrai": [35, 38, 39, 40, 41], "scalartyp": [35, 38, 39, 40, 41], "confus": [35, 53], "n_class": 35, "reorder": 35, "subset": 35, "y_true": 35, "y_pred": 35, "pred": 35, "cm": 35, "confusion_matrix": 35, "consider": 35, "direction": 35, "double_for_anticaus": 36, "ham": [36, 37, 53], "shd": 36, "miss": [36, 37], "count": 36, "wrong": 36, "remark": 36, "mixededgegraph": [36, 45, 53], "infin": 36, "you": [36, 45, 48, 49], "bayesian": 36, "network": [36, 48], "sub": 36, "circular": 36, "systemat": 36, "worst": 37, "groundtruth": 37, "err": 37, "sum": 37, "n_spline": [38, 39, 40, 41], "splines_degre": [38, 39, 40, 41], "pn": [38, 40, 41], "pns_num_neighbor": [38, 40, 41], "pns_threshold": [38, 40, 41], "cutoff": [38, 39, 40, 41], "spline": [38, 39, 40, 41], "automat": [38, 39, 40, 41], "decreas": [38, 39, 40, 41, 48], "insuffici": [38, 39, 40, 41], "preliminari": [38, 39, 40, 41], "neighbour": [38, 40, 41], "rel": [38, 39, 40, 41], "preced": [38, 39, 40, 41], "b\u00fchlmann": [38, 39, 40, 41], "jona": [38, 39, 40, 41], "jan": [38, 39, 40, 41], "ernest": [38, 39, 40, 41], "penal": [38, 39, 40, 41], "42": [38, 39, 40, 41, 53], "14": [38, 39, 40, 41, 48], "aos1260": [38, 39, 40, 41], "data_df": [38, 39, 40, 41], "datafam": [38, 39, 40, 41], "a_dens": [38, 39, 40, 41], "g_includ": [38, 39, 40, 41], "g_exclud": [38, 39, 40, 41], "dens": [38, 39, 40, 41], "spuriou": [38, 39, 40, 41], "n_node": [38, 39, 40, 41], "eta_g": [39, 40, 41], "eta_h": [39, 40, 41], "das_cutoff": 39, "min_par": 39, "max_par": 39, "inspect": 39, "computation": 39, "cheap": 39, "highli": 39, "scalabl": 39, "thousand": 39, "magnitud": 39, "stein": [39, 40, 41], "retain": 39, "doesn": [39, 40], "significantli": 39, "execut": 39, "ineffici": 39, "advis": 39, "nicoletta": [39, 40], "noceti": [39, 40], "lorenzo": [39, 40], "rosasco": [39, 40], "kun": [39, 40], "locatello": [39, 40, 41], "2023": [39, 40], "openreview": [39, 40], "net": [39, 40], "forum": [39, 40], "6vvodjlbpqv": 39, "paul": [39, 40, 41], "rolland": [39, 40, 41], "volkan": [39, 40, 41], "cevher": [39, 40, 41], "matth": [39, 40, 41], "\u00e4": [39, 40, 41], "kleindessn": [39, 40, 41], "chri": [39, 40, 41, 53], "russel": [39, 40, 41], "dominik": [39, 40, 41], "janz": [39, 40, 41], "nonlinear": [39, 40, 41], "kamalika": [39, 40, 41], "chaudhuri": [39, 40, 41], "stefani": [39, 40, 41], "jegelka": [39, 40, 41], "song": [39, 40, 41], "csaba": [39, 40, 41], "szepesvari": [39, 40, 41], "gang": [39, 40, 41], "niu": [39, 40, 41], "sivan": [39, 40, 41], "sabato": [39, 40, 41], "39th": [39, 40, 41], "162": [39, 40, 41], "18741": [39, 40, 41], "18753": [39, 40, 41], "23": [39, 40, 41], "jul": [39, 40, 41], "2022": [39, 40, 41], "ident": [39, 40, 41], "ridg": [39, 40, 41], "hessian_diagon": [39, 40, 41], "h_diag": [39, 40, 41], "nablak": [39, 40, 41], "insid": [39, 40, 41], "nabla": [39, 40, 41], "dot": [39, 40, 41], "product": [39, 40, 41], "yingzhen": [39, 40, 41], "turner": [39, 40, 41], "iclr": [39, 40, 41], "page": [39, 40, 41, 45, 51], "2017": [39, 40, 41], "n_crossval": 40, "ridge_alpha": 40, "ridge_gamma": 40, "Not": 40, "kernelridgeregressor": 40, "librari": [40, 48, 51], "avoid": 40, "overfit": [40, 50], "out": 40, "cross": 40, "portion": 40, "unseen": 40, "regressor": 40, "gamma": 40, "arbitrari": 40, "rvo0bx90deu": 40, "estimate_vari": 41, "comparison": [41, 48], "alia": [42, 43, 44], "mix": 45, "admg": 45, "top": 45, "your": [45, 48], "pull": 45, "request": 45, "walk": 45, "pleas": 45, "tool": 45, "public": 45, "numer": 45, "instal": 45, "usag": 45, "basic": [45, 49], "releas": 45, "histori": 45, "develop": [45, 53], "who": [45, 53], "contribut": [45, 53], "codebas": 45, "contributor": 45, "modul": 45, "pip": 46, "poetri": 46, "pypi": 46, "project": [46, 53], "recommend": 46, "repositori": [46, 53], "github": 46, "git": 46, "why": 46, "sever": 47, "basi": 47, "highlight": 48, "challeng": 48, "bnlearn": 48, "bn": 48, "load": 48, "import_exampl": 48, "asia": [48, 53], "renam": 48, "tub": 48, "lung": 48, "bronc": 48, "smoke": 48, "xrai": 48, "dysp": 48, "inplac": 48, "gt": 48, "extract": 48, "file": 48, "ll": 48, "studi": 48, "expert": 48, "system": 48, "diagnos": 48, "diseas": 48, "lauritzen": 48, "spiegelhalt": 48, "1988": 48, "respiratori": 48, "symption": 48, "evid": 48, "goal": 48, "distinguish": 48, "tuberculosi": 48, "cancer": 48, "bronchiti": 48, "patient": 48, "end": 48, "ground_truth_edg": 48, "ground_truth": 48, "po": 48, "spring_layout": 48, "with_label": 48, "interpret": 48, "recent": 48, "visit": 48, "smoker": 48, "chest": 48, "rai": 48, "dyspnoea": 48, "difficulti": 48, "breath": 48, "symptom": 48, "learnabl": 48, "alon": 48, "mixtur": 48, "technic": 48, "cpdag_direct": 48, "cpdag_undirect": 48, "ground_truth_cpdag": 48, "commonli": 48, "simul": 48, "sometim": 48, "erron": 48, "conclus": 48, "sequenc": 48, "accumul": 48, "adjust": 48, "compens": 48, "thing": 48, "arguabl": 48, "favor": 48, "heurist": 48, "rigor": 48, "anti": 48, "pattern": 48, "56": 48, "tb": 48, "against": 48, "57": 48, "58": 48, "match_direct": 48, "sub_directed_graph": 48, "match_undirect": 48, "sub_undirected_graph": 48, "chanc": 48, "hard": 48, "inabl": 48, "lead": 48, "beyond": 48, "struggl": 48, "philosophi": 48, "dodiscoveri": 48, "easi": 48, "discuss": 48, "journal": 48, "royal": 48, "societi": 48, "157": 48, "224": 48, "abl": 49, "everyth": 49, "concept": 49, "auto_examples_python": 49, "zip": 49, "auto_examples_jupyt": 49, "hyperparamet": 50, "cmitest": [50, 53], "classifiercmitest": [50, 53], "pearson": 50, "correl": 50, "fisherzcitest": 50, "categor": [50, 53], "kernelcitest": 50, "classifi": [50, 53], "classifiercitest": [50, 53], "kernelcdtest": [50, 53], "bregmancdtest": [50, 53], "major": [51, 52, 53], "enhanc": [51, 52, 53], "tip": 51, "subscrib": 51, "io": 51, "notifi": 51, "integr": 53, "15": 53, "submodul": 53, "trevino": 53, "confusion_matrix_network": 53, "48": 53, "28": 53, "30": 53, "learnsemimarkovianskeleton": 53, "52": 53, "structure_hamming_dist": 53, "55": 53, "pr": 53, "branch": 53, "conflict": 53, "74": 53, "robert": 53, "osazuwa": 53, "ness": 53, "67": 53, "wrapper": 53, "gin": 53, "94": 53, "82": 53, "83": 53, "85": 53, "jaron": 53, "lee": 53, "106": 53, "commit": 53, "hook": 53, "lint": 53, "format": 53, "117": 53, "127": 53, "128": 53, "129": 53, "thank": 53, "everyon": 53, "mainten": 53, "incept": 53}, "objects": {"": [[0, 0, 0, "-", "dodiscover"]], "dodiscover": [[6, 1, 1, "", "ContextBuilder"], [7, 1, 1, "", "EquivalenceClass"], [8, 1, 1, "", "Graph"], [5, 0, 0, "-", "constraint"], [34, 4, 1, "", "make_context"]], "dodiscover.ContextBuilder": [[6, 2, 1, "", "build"], [6, 2, 1, "", "edges"], [6, 2, 1, "", "excluded_edges"], [6, 2, 1, "", "included_edges"], [6, 2, 1, "", "init_graph"], [6, 2, 1, "", "latent_variables"], [6, 2, 1, "", "observed_variables"], [6, 2, 1, "", "state_variable"], [6, 2, 1, "", "state_variables"], [6, 2, 1, "", "variables"]], "dodiscover.EquivalenceClass": [[7, 2, 1, "", "add_edge"], [7, 2, 1, "", "add_node"], [7, 3, 1, "", "bidirected_edge_name"], [7, 3, 1, "", "circle_edge_name"], [7, 2, 1, "", "copy"], [7, 3, 1, "", "directed_edge_name"], [7, 2, 1, "", "edges"], [7, 3, 1, "", "excluded_triples"], [7, 2, 1, "", "has_edge"], [7, 2, 1, "", "mark_unfaithful_triple"], [7, 2, 1, "", "neighbors"], [7, 3, 1, "", "nodes"], [7, 2, 1, "", "orient_uncertain_edge"], [7, 2, 1, "", "predecessors"], [7, 2, 1, "", "remove_edge"], [7, 2, 1, "", "remove_edges_from"], [7, 2, 1, "", "remove_node"], [7, 2, 1, "", "subgraph"], [7, 2, 1, "", "successors"], [7, 2, 1, "", "to_undirected"], [7, 3, 1, "", "undirected_edge_name"]], "dodiscover.Graph": [[8, 2, 1, "", "add_edge"], [8, 2, 1, "", "add_node"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "edges"], [8, 2, 1, "", "has_edge"], [8, 2, 1, "", "neighbors"], [8, 3, 1, "", "nodes"], [8, 2, 1, "", "remove_edge"], [8, 2, 1, "", "remove_edges_from"], [8, 2, 1, "", "remove_node"], [8, 2, 1, "", "subgraph"], [8, 2, 1, "", "to_undirected"]], "dodiscover.cd": [[9, 1, 1, "", "BaseConditionalDiscrepancyTest"], [10, 1, 1, "", "BregmanCDTest"], [11, 1, 1, "", "KernelCDTest"]], "dodiscover.cd.BaseConditionalDiscrepancyTest": [[9, 2, 1, "", "compute_null"], [9, 2, 1, "", "test"]], "dodiscover.cd.BregmanCDTest": [[10, 2, 1, "", "compute_null"], [10, 2, 1, "", "test"]], "dodiscover.cd.KernelCDTest": [[11, 2, 1, "", "compute_null"], [11, 2, 1, "", "test"]], "dodiscover.ci": [[12, 1, 1, "", "BaseConditionalIndependenceTest"], [13, 1, 1, "", "CMITest"], [14, 1, 1, "", "CategoricalCITest"], [15, 1, 1, "", "ClassifierCITest"], [16, 1, 1, "", "ClassifierCMITest"], [17, 1, 1, "", "FisherZCITest"], [18, 1, 1, "", "GSquareCITest"], [19, 1, 1, "", "KernelCITest"], [20, 1, 1, "", "Oracle"]], "dodiscover.ci.BaseConditionalIndependenceTest": [[12, 2, 1, "", "test"]], "dodiscover.ci.CMITest": [[13, 2, 1, "", "test"]], "dodiscover.ci.CategoricalCITest": [[14, 2, 1, "", "test"]], "dodiscover.ci.ClassifierCITest": [[15, 2, 1, "", "generate_train_test_data"], [15, 2, 1, "", "test"]], "dodiscover.ci.ClassifierCMITest": [[16, 2, 1, "", "generate_train_test_data"], [16, 2, 1, "", "test"]], "dodiscover.ci.FisherZCITest": [[17, 2, 1, "", "test"]], "dodiscover.ci.GSquareCITest": [[18, 2, 1, "", "test"]], "dodiscover.ci.KernelCITest": [[19, 2, 1, "", "test"]], "dodiscover.ci.Oracle": [[20, 2, 1, "", "test"]], "dodiscover.ci.kernel_utils": [[21, 4, 1, "", "compute_kernel"], [22, 4, 1, "", "corrent_matrix"], [23, 4, 1, "", "f_divergence_score"], [24, 4, 1, "", "kl_divergence_score"], [25, 4, 1, "", "von_neumann_divergence"]], "dodiscover.ci.monte_carlo": [[26, 4, 1, "", "generate_knn_in_subspace"], [27, 4, 1, "", "restricted_nbr_permutation"]], "dodiscover.constraint": [[28, 1, 1, "", "ConditioningSetSelection"], [29, 1, 1, "", "FCI"], [30, 1, 1, "", "LearnSemiMarkovianSkeleton"], [31, 1, 1, "", "LearnSkeleton"], [32, 1, 1, "", "PC"]], "dodiscover.constraint.ConditioningSetSelection": [[28, 5, 1, "", "COMPLETE"], [28, 5, 1, "", "NBRS"], [28, 5, 1, "", "NBRS_PATH"], [28, 5, 1, "", "PDS"], [28, 5, 1, "", "PDS_PATH"]], "dodiscover.constraint.FCI": [[29, 2, 1, "", "evaluate_edge"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "learn_skeleton"], [29, 2, 1, "", "orient_edges"], [29, 2, 1, "", "orient_unshielded_triples"]], "dodiscover.constraint.LearnSemiMarkovianSkeleton": [[30, 2, 1, "", "evaluate_edge"], [30, 2, 1, "", "fit"]], "dodiscover.constraint.LearnSkeleton": [[31, 2, 1, "", "evaluate_edge"], [31, 2, 1, "", "fit"]], "dodiscover.constraint.PC": [[32, 2, 1, "", "convert_skeleton_graph"], [32, 2, 1, "", "evaluate_edge"], [32, 2, 1, "", "fit"], [32, 2, 1, "", "learn_skeleton"], [32, 2, 1, "", "orient_edges"], [32, 2, 1, "", "orient_unshielded_triples"]], "dodiscover.context": [[33, 1, 1, "", "Context"]], "dodiscover.context.Context": [[33, 2, 1, "", "__hash__"], [33, 2, 1, "", "add_state_variable"], [33, 2, 1, "", "copy"], [33, 2, 1, "", "get_non_f_nodes"], [33, 2, 1, "", "get_params"], [33, 2, 1, "", "reverse_sigma_map"], [33, 2, 1, "", "set_params"], [33, 2, 1, "", "state_variable"]], "dodiscover.metrics": [[35, 4, 1, "", "confusion_matrix_networks"], [36, 4, 1, "", "structure_hamming_dist"], [37, 4, 1, "", "toporder_divergence"]], "dodiscover.toporder": [[38, 1, 1, "", "CAM"], [39, 1, 1, "", "DAS"], [40, 1, 1, "", "NoGAM"], [41, 1, 1, "", "SCORE"]], "dodiscover.toporder.CAM": [[38, 2, 1, "", "fit"], [38, 2, 1, "", "prune"]], "dodiscover.toporder.DAS": [[39, 2, 1, "", "fit"], [39, 2, 1, "", "hessian"], [39, 2, 1, "", "hessian_diagonal"], [39, 2, 1, "", "prune"], [39, 2, 1, "", "score"]], "dodiscover.toporder.NoGAM": [[40, 2, 1, "", "fit"], [40, 2, 1, "", "hessian"], [40, 2, 1, "", "hessian_diagonal"], [40, 2, 1, "", "prune"], [40, 2, 1, "", "score"]], "dodiscover.toporder.SCORE": [[41, 2, 1, "", "fit"], [41, 2, 1, "", "hessian"], [41, 2, 1, "", "hessian_diagonal"], [41, 2, 1, "", "prune"], [41, 2, 1, "", "score"]], "dodiscover.typing": [[42, 6, 1, "", "Column"], [43, 6, 1, "", "NetworkxGraph"], [44, 6, 1, "", "SeparatingSet"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "context": [0, 1, 2, 3, 33, 48], "causal": [0, 1, 2, 3, 5, 47, 48], "discoveri": [0, 1, 2, 3, 5, 47, 48], "constraint": [0, 5, 28, 29, 30, 31, 32], "base": [0, 2, 3, 4, 5], "structur": [0, 1, 2, 3], "learn": [0, 1, 2, 3, 5], "order": [0, 2, 3], "compar": 0, "algorithm": [0, 1, 2, 3, 48], "type": [0, 42, 43, 44], "graph": [0, 8], "protocol": 0, "condit": [0, 1, 4, 5, 48], "test": [0, 1, 48], "independ": [0, 1, 4, 48], "k": 0, "sampl": 0, "util": 0, "pc": [1, 32, 48], "from": [1, 2, 48], "observ": [1, 2, 5, 48], "data": [1, 2, 3, 4, 5, 48], "without": [1, 2, 47, 48], "latent": [1, 2, 47, 48], "confound": [1, 2, 47, 48], "simul": [1, 2, 3], "some": [1, 2, 3, 48], "instanti": [1, 48], "defin": [1, 2, 3, 48], "run": [1, 2, 3, 48], "summari": [2, 3], "us": [3, 12, 18, 20, 34, 41, 49], "prior": 3, "knowledg": 3, "fix": 3, "edg": 3, "exclud": 3, "mutual": 4, "inform": 4, "partial": 4, "pearson": 4, "correl": 4, "discret": 4, "categor": 4, "binari": 4, "kernel": 4, "approach": 4, "classifi": 4, "discrep": 4, "bregman": 4, "diverg": 4, "fundament": 5, "assumpt": 5, "non": 5, "parametr": 5, "markovian": 5, "scm": 5, "semi": 5, "intervent": 5, "choos": 5, "set": 5, "hyperparamet": 5, "control": 5, "overfit": 5, "robust": 5, "dodiscov": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49], "contextbuild": 6, "equivalenceclass": 7, "cd": [9, 10, 11], "baseconditionaldiscrepancytest": 9, "bregmancdtest": 10, "kernelcdtest": 11, "ci": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "baseconditionalindependencetest": 12, "exampl": [12, 18, 20, 34, 41, 49], "cmitest": 13, "categoricalcitest": 14, "classifiercitest": 15, "classifiercmitest": 16, "fisherzcitest": 17, "gsquarecitest": 18, "kernelcitest": 19, "oracl": 20, "kernel_util": [21, 22, 23, 24, 25], "compute_kernel": 21, "corrent_matrix": 22, "f_divergence_scor": 23, "kl_divergence_scor": 24, "von_neumann_diverg": 25, "monte_carlo": [26, 27], "generate_knn_in_subspac": 26, "restricted_nbr_permut": 27, "conditioningsetselect": 28, "fci": 29, "learnsemimarkovianskeleton": 30, "learnskeleton": 31, "make_context": 34, "metric": [35, 36, 37], "confusion_matrix_network": 35, "structure_hamming_dist": 36, "toporder_diverg": 37, "topord": [38, 39, 40, 41], "cam": 38, "da": 39, "nogam": 40, "score": 41, "column": 42, "networkxgraph": 43, "separatingset": 44, "content": 45, "get": 45, "start": 45, "team": 45, "indic": 45, "tabl": 45, "instal": 46, "tutori": [47, 49], "basic": 47, "model": 47, "refer": 48, "user": 50, "guid": 50, "releas": 51, "histori": 51, "what": 53, "": 53, "new": 53, "version": 53, "0": 53, "1": 53, "changelog": 53, "code": 53, "document": 53, "contributor": 53}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Context for causal discovery": [[0, "context-for-causal-discovery"]], "Constraint-based structure learning": [[0, "constraint-based-structure-learning"]], "Order-based structure learning": [[0, "order-based-structure-learning"]], "Comparing causal discovery algorithms": [[0, "comparing-causal-discovery-algorithms"]], "Typing": [[0, "typing"]], "Graph protocols": [[0, "graph-protocols"]], "Conditional Testing": [[0, "conditional-testing"]], "Conditional Independence Testing": [[0, "conditional-independence-testing"]], "Conditional k-sample testing": [[0, "conditional-k-sample-testing"]], "Utilities": [[0, "utilities"]], "PC algorithm for causal discovery from observational data without latent confounders": [[1, "pc-algorithm-for-causal-discovery-from-observational-data-without-latent-confounders"], [48, "PC-algorithm-for-causal-discovery-from-observational-data-without-latent-confounders"]], "Simulate some data": [[1, "simulate-some-data"], [2, "simulate-some-data"], [3, "simulate-some-data"]], "Instantiate some conditional independence tests": [[1, "instantiate-some-conditional-independence-tests"], [48, "Instantiate-some-conditional-independence-tests"]], "Define the context": [[1, "define-the-context"], [2, "define-the-context"], [48, "Define-the-context"]], "Run structure learning algorithm": [[1, "run-structure-learning-algorithm"], [2, "run-structure-learning-algorithm"]], "Order-based algorithms for causal discovery from observational data without latent confounders": [[2, "order-based-algorithms-for-causal-discovery-from-observational-data-without-latent-confounders"]], "Summary": [[2, "summary"], [3, "summary"]], "Using prior knowledge in order-based algorithms for causal discovery": [[3, "using-prior-knowledge-in-order-based-algorithms-for-causal-discovery"]], "Define the context with fixed edges": [[3, "define-the-context-with-fixed-edges"]], "Run structure learning algorithm with fixed edges": [[3, "run-structure-learning-algorithm-with-fixed-edges"]], "Define the context with excluded edges": [[3, "define-the-context-with-excluded-edges"]], "Independence": [[4, "independence"]], "Conditional Mutual Information": [[4, "conditional-mutual-information"]], "Partial (Pearson) Correlation": [[4, "partial-pearson-correlation"]], "Discrete, Categorical and Binary Data": [[4, "discrete-categorical-and-binary-data"], [4, "id6"]], "Kernel-Approaches": [[4, "kernel-approaches"], [4, "id7"]], "Classifier-based Approaches": [[4, "classifier-based-approaches"]], "Conditional Discrepancy": [[4, "conditional-discrepancy"]], "Bregman-Divergences": [[4, "bregman-divergences"]], "Constraint-based causal discovery": [[5, "module-dodiscover.constraint"]], "Fundamental Assumptions of Constraint-Based Causal Discovery": [[5, "fundamental-assumptions-of-constraint-based-causal-discovery"]], "(Non-parametric) Markovian SCMs with Observational Data": [[5, "non-parametric-markovian-scms-with-observational-data"]], "(Non-parametric) Semi-Markovian SCMs with Observational Data": [[5, "non-parametric-semi-markovian-scms-with-observational-data"]], "(Non-parametric) SCMs with Interventional Data": [[5, "non-parametric-scms-with-interventional-data"]], "Choosing the conditioning sets": [[5, "choosing-the-conditioning-sets"]], "Hyperparameters and controlling overfitting": [[5, "hyperparameters-and-controlling-overfitting"]], "Robust learning": [[5, "robust-learning"]], "dodiscover.ContextBuilder": [[6, "dodiscover-contextbuilder"]], "dodiscover.EquivalenceClass": [[7, "dodiscover-equivalenceclass"]], "dodiscover.Graph": [[8, "dodiscover-graph"]], "dodiscover.cd.BaseConditionalDiscrepancyTest": [[9, "dodiscover-cd-baseconditionaldiscrepancytest"]], "dodiscover.cd.BregmanCDTest": [[10, "dodiscover-cd-bregmancdtest"]], "dodiscover.cd.KernelCDTest": [[11, "dodiscover-cd-kernelcdtest"]], "dodiscover.ci.BaseConditionalIndependenceTest": [[12, "dodiscover-ci-baseconditionalindependencetest"]], "Examples using dodiscover.ci.BaseConditionalIndependenceTest": [[12, "examples-using-dodiscover-ci-baseconditionalindependencetest"]], "dodiscover.ci.CMITest": [[13, "dodiscover-ci-cmitest"]], "dodiscover.ci.CategoricalCITest": [[14, "dodiscover-ci-categoricalcitest"]], "dodiscover.ci.ClassifierCITest": [[15, "dodiscover-ci-classifiercitest"]], "dodiscover.ci.ClassifierCMITest": [[16, "dodiscover-ci-classifiercmitest"]], "dodiscover.ci.FisherZCITest": [[17, "dodiscover-ci-fisherzcitest"]], "dodiscover.ci.GSquareCITest": [[18, "dodiscover-ci-gsquarecitest"]], "Examples using dodiscover.ci.GSquareCITest": [[18, "examples-using-dodiscover-ci-gsquarecitest"]], "dodiscover.ci.KernelCITest": [[19, "dodiscover-ci-kernelcitest"]], "dodiscover.ci.Oracle": [[20, "dodiscover-ci-oracle"]], "Examples using dodiscover.ci.Oracle": [[20, "examples-using-dodiscover-ci-oracle"]], "dodiscover.ci.kernel_utils.compute_kernel": [[21, "dodiscover-ci-kernel-utils-compute-kernel"]], "dodiscover.ci.kernel_utils.corrent_matrix": [[22, "dodiscover-ci-kernel-utils-corrent-matrix"]], "dodiscover.ci.kernel_utils.f_divergence_score": [[23, "dodiscover-ci-kernel-utils-f-divergence-score"]], "dodiscover.ci.kernel_utils.kl_divergence_score": [[24, "dodiscover-ci-kernel-utils-kl-divergence-score"]], "dodiscover.ci.kernel_utils.von_neumann_divergence": [[25, "dodiscover-ci-kernel-utils-von-neumann-divergence"]], "dodiscover.ci.monte_carlo.generate_knn_in_subspace": [[26, "dodiscover-ci-monte-carlo-generate-knn-in-subspace"]], "dodiscover.ci.monte_carlo.restricted_nbr_permutation": [[27, "dodiscover-ci-monte-carlo-restricted-nbr-permutation"]], "dodiscover.constraint.ConditioningSetSelection": [[28, "dodiscover-constraint-conditioningsetselection"]], "dodiscover.constraint.FCI": [[29, "dodiscover-constraint-fci"]], "dodiscover.constraint.LearnSemiMarkovianSkeleton": [[30, "dodiscover-constraint-learnsemimarkovianskeleton"]], "dodiscover.constraint.LearnSkeleton": [[31, "dodiscover-constraint-learnskeleton"]], "dodiscover.constraint.PC": [[32, "dodiscover-constraint-pc"]], "dodiscover.context.Context": [[33, "dodiscover-context-context"]], "dodiscover.make_context": [[34, "dodiscover-make-context"]], "Examples using dodiscover.make_context": [[34, "examples-using-dodiscover-make-context"]], "dodiscover.metrics.confusion_matrix_networks": [[35, "dodiscover-metrics-confusion-matrix-networks"]], "dodiscover.metrics.structure_hamming_dist": [[36, "dodiscover-metrics-structure-hamming-dist"]], "dodiscover.metrics.toporder_divergence": [[37, "dodiscover-metrics-toporder-divergence"]], "dodiscover.toporder.CAM": [[38, "dodiscover-toporder-cam"]], "dodiscover.toporder.DAS": [[39, "dodiscover-toporder-das"]], "dodiscover.toporder.NoGAM": [[40, "dodiscover-toporder-nogam"]], "dodiscover.toporder.SCORE": [[41, "dodiscover-toporder-score"]], "Examples using dodiscover.toporder.SCORE": [[41, "examples-using-dodiscover-toporder-score"]], "dodiscover.typing.Column": [[42, "dodiscover-typing-column"]], "dodiscover.typing.NetworkxGraph": [[43, "dodiscover-typing-networkxgraph"]], "dodiscover.typing.SeparatingSet": [[44, "dodiscover-typing-separatingset"]], "dodiscover": [[45, "dodiscover"]], "Contents": [[45, "contents"]], "Getting started:": [[45, null]], "Team": [[45, "team"]], "Indices and tables": [[45, "indices-and-tables"]], "Installation": [[46, "installation"]], "Tutorials": [[47, "tutorials"]], "Basic causal discovery models without latent confounders": [[47, "basic-causal-discovery-models-without-latent-confounders"]], "Run discovery algorithm": [[48, "Run-discovery-algorithm"]], "References": [[48, "References"]], "Examples and Tutorials using DoDiscover": [[49, "examples-and-tutorials-using-dodiscover"]], "Examples": [[49, "examples"]], "User Guide": [[50, "user-guide"]], "Release History": [[51, "release-history"]], "What\u2019s new?": [[53, "what-s-new"]], "Version 0.1": [[53, "version-0-1"]], "Changelog": [[53, "changelog"]], "Code and Documentation Contributors": [[53, "code-and-documentation-contributors"]]}, "indexentries": {"dodiscover": [[0, "module-dodiscover"]], "module": [[0, "module-dodiscover"], [5, "module-dodiscover.constraint"]], "dodiscover.constraint": [[5, "module-dodiscover.constraint"]], "contextbuilder (class in dodiscover)": [[6, "dodiscover.ContextBuilder"]], "build() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.build"]], "edges() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.edges"]], "excluded_edges() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.excluded_edges"]], "included_edges() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.included_edges"]], "init_graph() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.init_graph"]], "latent_variables() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.latent_variables"]], "observed_variables() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.observed_variables"]], "state_variable() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.state_variable"]], "state_variables() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.state_variables"]], "variables() (dodiscover.contextbuilder method)": [[6, "dodiscover.ContextBuilder.variables"]], "equivalenceclass (class in dodiscover)": [[7, "dodiscover.EquivalenceClass"]], "add_edge() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.add_edge"]], "add_node() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.add_node"]], "bidirected_edge_name (dodiscover.equivalenceclass property)": [[7, "dodiscover.EquivalenceClass.bidirected_edge_name"]], "circle_edge_name (dodiscover.equivalenceclass property)": [[7, "dodiscover.EquivalenceClass.circle_edge_name"]], "copy() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.copy"]], "directed_edge_name (dodiscover.equivalenceclass property)": [[7, "dodiscover.EquivalenceClass.directed_edge_name"]], "edges() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.edges"]], "excluded_triples (dodiscover.equivalenceclass property)": [[7, "dodiscover.EquivalenceClass.excluded_triples"]], "has_edge() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.has_edge"]], "mark_unfaithful_triple() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.mark_unfaithful_triple"]], "neighbors() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.neighbors"]], "nodes (dodiscover.equivalenceclass property)": [[7, "dodiscover.EquivalenceClass.nodes"]], "orient_uncertain_edge() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.orient_uncertain_edge"]], "predecessors() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.predecessors"]], "remove_edge() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.remove_edge"]], "remove_edges_from() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.remove_edges_from"]], "remove_node() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.remove_node"]], "subgraph() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.subgraph"]], "successors() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.successors"]], "to_undirected() (dodiscover.equivalenceclass method)": [[7, "dodiscover.EquivalenceClass.to_undirected"]], "undirected_edge_name (dodiscover.equivalenceclass property)": [[7, "dodiscover.EquivalenceClass.undirected_edge_name"]], "graph (class in dodiscover)": [[8, "dodiscover.Graph"]], "add_edge() (dodiscover.graph method)": [[8, "dodiscover.Graph.add_edge"]], "add_node() (dodiscover.graph method)": [[8, "dodiscover.Graph.add_node"]], "copy() (dodiscover.graph method)": [[8, "dodiscover.Graph.copy"]], "edges() (dodiscover.graph method)": [[8, "dodiscover.Graph.edges"]], "has_edge() (dodiscover.graph method)": [[8, "dodiscover.Graph.has_edge"]], "neighbors() (dodiscover.graph method)": [[8, "dodiscover.Graph.neighbors"]], "nodes (dodiscover.graph property)": [[8, "dodiscover.Graph.nodes"]], "remove_edge() (dodiscover.graph method)": [[8, "dodiscover.Graph.remove_edge"]], "remove_edges_from() (dodiscover.graph method)": [[8, "dodiscover.Graph.remove_edges_from"]], "remove_node() (dodiscover.graph method)": [[8, "dodiscover.Graph.remove_node"]], "subgraph() (dodiscover.graph method)": [[8, "dodiscover.Graph.subgraph"]], "to_undirected() (dodiscover.graph method)": [[8, "dodiscover.Graph.to_undirected"]], "baseconditionaldiscrepancytest (class in dodiscover.cd)": [[9, "dodiscover.cd.BaseConditionalDiscrepancyTest"]], "compute_null() (dodiscover.cd.baseconditionaldiscrepancytest method)": [[9, "dodiscover.cd.BaseConditionalDiscrepancyTest.compute_null"]], "test() (dodiscover.cd.baseconditionaldiscrepancytest method)": [[9, "dodiscover.cd.BaseConditionalDiscrepancyTest.test"]], "bregmancdtest (class in dodiscover.cd)": [[10, "dodiscover.cd.BregmanCDTest"]], "compute_null() (dodiscover.cd.bregmancdtest method)": [[10, "dodiscover.cd.BregmanCDTest.compute_null"]], "test() (dodiscover.cd.bregmancdtest method)": [[10, "dodiscover.cd.BregmanCDTest.test"]], "kernelcdtest (class in dodiscover.cd)": [[11, "dodiscover.cd.KernelCDTest"]], "compute_null() (dodiscover.cd.kernelcdtest method)": [[11, "dodiscover.cd.KernelCDTest.compute_null"]], "test() (dodiscover.cd.kernelcdtest method)": [[11, "dodiscover.cd.KernelCDTest.test"]], "baseconditionalindependencetest (class in dodiscover.ci)": [[12, "dodiscover.ci.BaseConditionalIndependenceTest"]], "test() (dodiscover.ci.baseconditionalindependencetest method)": [[12, "dodiscover.ci.BaseConditionalIndependenceTest.test"]], "cmitest (class in dodiscover.ci)": [[13, "dodiscover.ci.CMITest"]], "test() (dodiscover.ci.cmitest method)": [[13, "dodiscover.ci.CMITest.test"]], "categoricalcitest (class in dodiscover.ci)": [[14, "dodiscover.ci.CategoricalCITest"]], "test() (dodiscover.ci.categoricalcitest method)": [[14, "dodiscover.ci.CategoricalCITest.test"]], "classifiercitest (class in dodiscover.ci)": [[15, "dodiscover.ci.ClassifierCITest"]], "generate_train_test_data() (dodiscover.ci.classifiercitest method)": [[15, "dodiscover.ci.ClassifierCITest.generate_train_test_data"]], "test() (dodiscover.ci.classifiercitest method)": [[15, "dodiscover.ci.ClassifierCITest.test"]], "classifiercmitest (class in dodiscover.ci)": [[16, "dodiscover.ci.ClassifierCMITest"]], "generate_train_test_data() (dodiscover.ci.classifiercmitest method)": [[16, "dodiscover.ci.ClassifierCMITest.generate_train_test_data"]], "test() (dodiscover.ci.classifiercmitest method)": [[16, "dodiscover.ci.ClassifierCMITest.test"]], "fisherzcitest (class in dodiscover.ci)": [[17, "dodiscover.ci.FisherZCITest"]], "test() (dodiscover.ci.fisherzcitest method)": [[17, "dodiscover.ci.FisherZCITest.test"]], "gsquarecitest (class in dodiscover.ci)": [[18, "dodiscover.ci.GSquareCITest"]], "test() (dodiscover.ci.gsquarecitest method)": [[18, "dodiscover.ci.GSquareCITest.test"]], "kernelcitest (class in dodiscover.ci)": [[19, "dodiscover.ci.KernelCITest"]], "test() (dodiscover.ci.kernelcitest method)": [[19, "dodiscover.ci.KernelCITest.test"]], "oracle (class in dodiscover.ci)": [[20, "dodiscover.ci.Oracle"]], "test() (dodiscover.ci.oracle method)": [[20, "dodiscover.ci.Oracle.test"]], "compute_kernel() (in module dodiscover.ci.kernel_utils)": [[21, "dodiscover.ci.kernel_utils.compute_kernel"]], "corrent_matrix() (in module dodiscover.ci.kernel_utils)": [[22, "dodiscover.ci.kernel_utils.corrent_matrix"]], "f_divergence_score() (in module dodiscover.ci.kernel_utils)": [[23, "dodiscover.ci.kernel_utils.f_divergence_score"]], "kl_divergence_score() (in module dodiscover.ci.kernel_utils)": [[24, "dodiscover.ci.kernel_utils.kl_divergence_score"]], "von_neumann_divergence() (in module dodiscover.ci.kernel_utils)": [[25, "dodiscover.ci.kernel_utils.von_neumann_divergence"]], "generate_knn_in_subspace() (in module dodiscover.ci.monte_carlo)": [[26, "dodiscover.ci.monte_carlo.generate_knn_in_subspace"]], "restricted_nbr_permutation() (in module dodiscover.ci.monte_carlo)": [[27, "dodiscover.ci.monte_carlo.restricted_nbr_permutation"]], "complete (dodiscover.constraint.conditioningsetselection attribute)": [[28, "dodiscover.constraint.ConditioningSetSelection.COMPLETE"]], "conditioningsetselection (class in dodiscover.constraint)": [[28, "dodiscover.constraint.ConditioningSetSelection"]], "nbrs (dodiscover.constraint.conditioningsetselection attribute)": [[28, "dodiscover.constraint.ConditioningSetSelection.NBRS"]], "nbrs_path (dodiscover.constraint.conditioningsetselection attribute)": [[28, "dodiscover.constraint.ConditioningSetSelection.NBRS_PATH"]], "pds (dodiscover.constraint.conditioningsetselection attribute)": [[28, "dodiscover.constraint.ConditioningSetSelection.PDS"]], "pds_path (dodiscover.constraint.conditioningsetselection attribute)": [[28, "dodiscover.constraint.ConditioningSetSelection.PDS_PATH"]], "fci (class in dodiscover.constraint)": [[29, "dodiscover.constraint.FCI"]], "evaluate_edge() (dodiscover.constraint.fci method)": [[29, "dodiscover.constraint.FCI.evaluate_edge"]], "fit() (dodiscover.constraint.fci method)": [[29, "dodiscover.constraint.FCI.fit"]], "learn_skeleton() (dodiscover.constraint.fci method)": [[29, "dodiscover.constraint.FCI.learn_skeleton"]], "orient_edges() (dodiscover.constraint.fci method)": [[29, "dodiscover.constraint.FCI.orient_edges"]], "orient_unshielded_triples() (dodiscover.constraint.fci method)": [[29, "dodiscover.constraint.FCI.orient_unshielded_triples"]], "learnsemimarkovianskeleton (class in dodiscover.constraint)": [[30, "dodiscover.constraint.LearnSemiMarkovianSkeleton"]], "evaluate_edge() (dodiscover.constraint.learnsemimarkovianskeleton method)": [[30, "dodiscover.constraint.LearnSemiMarkovianSkeleton.evaluate_edge"]], "fit() (dodiscover.constraint.learnsemimarkovianskeleton method)": [[30, "dodiscover.constraint.LearnSemiMarkovianSkeleton.fit"]], "learnskeleton (class in dodiscover.constraint)": [[31, "dodiscover.constraint.LearnSkeleton"]], "evaluate_edge() (dodiscover.constraint.learnskeleton method)": [[31, "dodiscover.constraint.LearnSkeleton.evaluate_edge"]], "fit() (dodiscover.constraint.learnskeleton method)": [[31, "dodiscover.constraint.LearnSkeleton.fit"]], "pc (class in dodiscover.constraint)": [[32, "dodiscover.constraint.PC"]], "convert_skeleton_graph() (dodiscover.constraint.pc method)": [[32, "dodiscover.constraint.PC.convert_skeleton_graph"]], "evaluate_edge() (dodiscover.constraint.pc method)": [[32, "dodiscover.constraint.PC.evaluate_edge"]], "fit() (dodiscover.constraint.pc method)": [[32, "dodiscover.constraint.PC.fit"]], "learn_skeleton() (dodiscover.constraint.pc method)": [[32, "dodiscover.constraint.PC.learn_skeleton"]], "orient_edges() (dodiscover.constraint.pc method)": [[32, "dodiscover.constraint.PC.orient_edges"]], "orient_unshielded_triples() (dodiscover.constraint.pc method)": [[32, "dodiscover.constraint.PC.orient_unshielded_triples"]], "context (class in dodiscover.context)": [[33, "dodiscover.context.Context"]], "__hash__() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.__hash__"]], "add_state_variable() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.add_state_variable"]], "copy() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.copy"]], "get_non_f_nodes() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.get_non_f_nodes"]], "get_params() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.get_params"]], "reverse_sigma_map() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.reverse_sigma_map"]], "set_params() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.set_params"]], "state_variable() (dodiscover.context.context method)": [[33, "dodiscover.context.Context.state_variable"]], "make_context() (in module dodiscover)": [[34, "dodiscover.make_context"]], "confusion_matrix_networks() (in module dodiscover.metrics)": [[35, "dodiscover.metrics.confusion_matrix_networks"]], "structure_hamming_dist() (in module dodiscover.metrics)": [[36, "dodiscover.metrics.structure_hamming_dist"]], "toporder_divergence() (in module dodiscover.metrics)": [[37, "dodiscover.metrics.toporder_divergence"]], "cam (class in dodiscover.toporder)": [[38, "dodiscover.toporder.CAM"]], "fit() (dodiscover.toporder.cam method)": [[38, "dodiscover.toporder.CAM.fit"]], "prune() (dodiscover.toporder.cam method)": [[38, "dodiscover.toporder.CAM.prune"]], "das (class in dodiscover.toporder)": [[39, "dodiscover.toporder.DAS"]], "fit() (dodiscover.toporder.das method)": [[39, "dodiscover.toporder.DAS.fit"]], "hessian() (dodiscover.toporder.das method)": [[39, "dodiscover.toporder.DAS.hessian"]], "hessian_diagonal() (dodiscover.toporder.das method)": [[39, "dodiscover.toporder.DAS.hessian_diagonal"]], "prune() (dodiscover.toporder.das method)": [[39, "dodiscover.toporder.DAS.prune"]], "score() (dodiscover.toporder.das method)": [[39, "dodiscover.toporder.DAS.score"]], "nogam (class in dodiscover.toporder)": [[40, "dodiscover.toporder.NoGAM"]], "fit() (dodiscover.toporder.nogam method)": [[40, "dodiscover.toporder.NoGAM.fit"]], "hessian() (dodiscover.toporder.nogam method)": [[40, "dodiscover.toporder.NoGAM.hessian"]], "hessian_diagonal() (dodiscover.toporder.nogam method)": [[40, "dodiscover.toporder.NoGAM.hessian_diagonal"]], "prune() (dodiscover.toporder.nogam method)": [[40, "dodiscover.toporder.NoGAM.prune"]], "score() (dodiscover.toporder.nogam method)": [[40, "dodiscover.toporder.NoGAM.score"]], "score (class in dodiscover.toporder)": [[41, "dodiscover.toporder.SCORE"]], "fit() (dodiscover.toporder.score method)": [[41, "dodiscover.toporder.SCORE.fit"]], "hessian() (dodiscover.toporder.score method)": [[41, "dodiscover.toporder.SCORE.hessian"]], "hessian_diagonal() (dodiscover.toporder.score method)": [[41, "dodiscover.toporder.SCORE.hessian_diagonal"]], "prune() (dodiscover.toporder.score method)": [[41, "dodiscover.toporder.SCORE.prune"]], "score() (dodiscover.toporder.score method)": [[41, "dodiscover.toporder.SCORE.score"]], "column (in module dodiscover.typing)": [[42, "dodiscover.typing.Column"]], "networkxgraph (in module dodiscover.typing)": [[43, "dodiscover.typing.NetworkxGraph"]], "separatingset (in module dodiscover.typing)": [[44, "dodiscover.typing.SeparatingSet"]]}})