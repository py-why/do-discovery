Search.setIndex({"docnames": ["api", "auto_examples/plot_pc_alg", "conditional_independence", "constraint_causal_discovery", "generated/dodiscover.ContextBuilder", "generated/dodiscover.EquivalenceClass", "generated/dodiscover.Graph", "generated/dodiscover.cd.BaseConditionalDiscrepancyTest", "generated/dodiscover.cd.BregmanCDTest", "generated/dodiscover.cd.KernelCDTest", "generated/dodiscover.ci.BaseConditionalIndependenceTest", "generated/dodiscover.ci.CMITest", "generated/dodiscover.ci.CategoricalCITest", "generated/dodiscover.ci.ClassifierCITest", "generated/dodiscover.ci.ClassifierCMITest", "generated/dodiscover.ci.FisherZCITest", "generated/dodiscover.ci.GSquareCITest", "generated/dodiscover.ci.KernelCITest", "generated/dodiscover.ci.Oracle", "generated/dodiscover.ci.kernel_utils.compute_kernel", "generated/dodiscover.ci.kernel_utils.corrent_matrix", "generated/dodiscover.ci.kernel_utils.f_divergence_score", "generated/dodiscover.ci.kernel_utils.kl_divergence_score", "generated/dodiscover.ci.kernel_utils.von_neumann_divergence", "generated/dodiscover.ci.monte_carlo.generate_knn_in_subspace", "generated/dodiscover.ci.monte_carlo.restricted_nbr_permutation", "generated/dodiscover.constraint.ConditioningSetSelection", "generated/dodiscover.constraint.FCI", "generated/dodiscover.constraint.LearnSemiMarkovianSkeleton", "generated/dodiscover.constraint.LearnSkeleton", "generated/dodiscover.constraint.PC", "generated/dodiscover.context.Context", "generated/dodiscover.make_context", "generated/dodiscover.metrics.confusion_matrix_networks", "generated/dodiscover.metrics.structure_hamming_dist", "generated/dodiscover.typing.Column", "generated/dodiscover.typing.NetworkxGraph", "generated/dodiscover.typing.SeparatingSet", "index", "installation", "tutorials/index", "tutorials/markovian/example-pc-algo", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/plot_pc_alg.rst", "conditional_independence.rst", "constraint_causal_discovery.rst", "generated/dodiscover.ContextBuilder.rst", "generated/dodiscover.EquivalenceClass.rst", "generated/dodiscover.Graph.rst", "generated/dodiscover.cd.BaseConditionalDiscrepancyTest.rst", "generated/dodiscover.cd.BregmanCDTest.rst", "generated/dodiscover.cd.KernelCDTest.rst", "generated/dodiscover.ci.BaseConditionalIndependenceTest.rst", "generated/dodiscover.ci.CMITest.rst", "generated/dodiscover.ci.CategoricalCITest.rst", "generated/dodiscover.ci.ClassifierCITest.rst", "generated/dodiscover.ci.ClassifierCMITest.rst", "generated/dodiscover.ci.FisherZCITest.rst", "generated/dodiscover.ci.GSquareCITest.rst", "generated/dodiscover.ci.KernelCITest.rst", "generated/dodiscover.ci.Oracle.rst", "generated/dodiscover.ci.kernel_utils.compute_kernel.rst", "generated/dodiscover.ci.kernel_utils.corrent_matrix.rst", "generated/dodiscover.ci.kernel_utils.f_divergence_score.rst", "generated/dodiscover.ci.kernel_utils.kl_divergence_score.rst", "generated/dodiscover.ci.kernel_utils.von_neumann_divergence.rst", "generated/dodiscover.ci.monte_carlo.generate_knn_in_subspace.rst", "generated/dodiscover.ci.monte_carlo.restricted_nbr_permutation.rst", "generated/dodiscover.constraint.ConditioningSetSelection.rst", "generated/dodiscover.constraint.FCI.rst", "generated/dodiscover.constraint.LearnSemiMarkovianSkeleton.rst", "generated/dodiscover.constraint.LearnSkeleton.rst", "generated/dodiscover.constraint.PC.rst", "generated/dodiscover.context.Context.rst", "generated/dodiscover.make_context.rst", "generated/dodiscover.metrics.confusion_matrix_networks.rst", "generated/dodiscover.metrics.structure_hamming_dist.rst", "generated/dodiscover.typing.Column.rst", "generated/dodiscover.typing.NetworkxGraph.rst", "generated/dodiscover.typing.SeparatingSet.rst", "index.rst", "installation.md", "tutorials/index.rst", "tutorials/markovian/example-pc-algo.ipynb", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API", "PC algorithm for causal discovery from observational data without latent confounders", "<span class=\"section-number\">2. </span>Independence", "<span class=\"section-number\">1. </span>Constraint-based causal discovery", "dodiscover.ContextBuilder", "dodiscover.EquivalenceClass", "dodiscover.Graph", "dodiscover.cd.BaseConditionalDiscrepancyTest", "<span class=\"section-number\">3.3.1. </span>dodiscover.cd.BregmanCDTest", "<span class=\"section-number\">3.2.1. </span>dodiscover.cd.KernelCDTest", "dodiscover.ci.BaseConditionalIndependenceTest", "<span class=\"section-number\">2.1.1. </span>dodiscover.ci.CMITest", "dodiscover.ci.CategoricalCITest", "<span class=\"section-number\">2.5.1. </span>dodiscover.ci.ClassifierCITest", "<span class=\"section-number\">2.1.2. </span>dodiscover.ci.ClassifierCMITest", "<span class=\"section-number\">2.2.1. </span>dodiscover.ci.FisherZCITest", "<span class=\"section-number\">2.3.1. </span>dodiscover.ci.GSquareCITest", "<span class=\"section-number\">2.4.1. </span>dodiscover.ci.KernelCITest", "dodiscover.ci.Oracle", "dodiscover.ci.kernel_utils.compute_kernel", "dodiscover.ci.kernel_utils.corrent_matrix", "dodiscover.ci.kernel_utils.f_divergence_score", "dodiscover.ci.kernel_utils.kl_divergence_score", "dodiscover.ci.kernel_utils.von_neumann_divergence", "dodiscover.ci.monte_carlo.generate_knn_in_subspace", "dodiscover.ci.monte_carlo.restricted_nbr_permutation", "<span class=\"section-number\">1.5.1. </span>dodiscover.constraint.ConditioningSetSelection", "dodiscover.constraint.FCI", "dodiscover.constraint.LearnSemiMarkovianSkeleton", "dodiscover.constraint.LearnSkeleton", "dodiscover.constraint.PC", "dodiscover.context.Context", "dodiscover.make_context", "dodiscover.metrics.confusion_matrix_networks", "dodiscover.metrics.structure_hamming_dist", "dodiscover.typing.Column", "dodiscover.typing.NetworkxGraph", "dodiscover.typing.SeparatingSet", "<strong>dodiscover</strong>", "Installation", "Tutorials", "PC algorithm for causal discovery from observational data without latent confounders", "Examples and Tutorials using DoDiscover", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"dodiscov": [0, 1, 3, 39, 41, 43, 44, 46], "thi": [0, 1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 18, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 44], "i": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41], "applic": [0, 41], "program": 0, "interfac": [0, 7, 10], "refer": [0, 8, 9, 11, 18, 27, 28, 29, 30, 38], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 41, 46], "camelcas": 0, "name": [0, 4, 5, 27, 28, 29, 30, 31], "function": [0, 7, 8, 9, 10, 11, 13, 14, 19, 21, 22, 27, 28, 29, 30, 33, 46], "underscore_cas": 0, "group": [0, 2, 7, 8, 9], "themat": 0, "analysi": 0, "stage": [0, 3, 28], "rather": 0, "than": [0, 1, 3, 11, 34, 41], "just": [0, 1, 2, 39], "data": [0, 4, 5, 6, 8, 9, 10, 11, 16, 18, 19, 20, 27, 28, 29, 30, 31, 32, 38, 40, 42, 43, 46], "mani": [0, 2, 3, 38], "case": [0, 1, 2, 3, 41], "ha": [0, 1, 2, 3, 5, 6, 7, 10, 11, 25, 28, 29, 41, 46], "addit": [0, 3, 27, 30], "form": [0, 1, 2, 3, 20, 31, 41], "apriori": [0, 1], "knowledg": [0, 4, 28, 30, 31, 41], "dataset": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30, 31, 41], "from": [0, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 16, 18, 21, 22, 27, 28, 29, 30, 32, 33, 39, 40, 42, 46], "differ": [0, 2, 3, 7, 8, 9, 27, 28, 29, 30, 34, 38], "environ": [0, 2, 7, 8, 9], "all": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 41, 42, 44], "pass": [0, 1, 8, 9, 18, 27, 30], "object": [0, 1, 4, 27, 28, 29, 30, 31, 32, 41, 46], "One": [0, 2, 4, 31, 41], "should": [0, 1, 4, 10, 11, 12, 13, 14, 15, 16, 17, 27, 30, 31, 41], "us": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 14, 24, 25, 27, 28, 29, 30, 31, 33, 38, 41, 46], "our": [0, 2, 38, 41], "builder": [0, 4], "make_context": [0, 1, 4, 31, 41, 46], "construct": [0, 1, 2, 41], "see": [0, 1, 2, 3, 8, 9, 11, 21, 22, 25, 27, 28, 29, 30, 38, 41], "doc": [0, 46], "more": [0, 1, 2, 3, 8, 9, 11, 27, 28, 29, 30, 34, 38, 41], "inform": [0, 3, 4, 8, 9, 11, 26, 28, 32, 43, 46], "we": [0, 1, 2, 3, 7, 8, 9, 28, 29, 31, 34, 38, 40, 41, 46], "defin": [0, 2, 11, 19, 28, 29, 31, 34], "some": [0, 2, 26, 28, 29, 31, 42], "custom": 0, "allow": [0, 3, 26, 28], "3rd": 0, "parti": 0, "packag": [0, 38], "work": [0, 1, 4, 6, 31, 41], "mypi": 0, "experiment": [0, 3], "provid": [0, 1, 4, 28, 38, 40, 41], "an": [0, 1, 2, 3, 4, 5, 6, 18, 20, 21, 22, 27, 28, 29, 30, 31, 33, 34, 38, 41], "discrep": [0, 7, 8, 9, 38, 43, 46], "also": [0, 1, 2, 3, 9, 19, 28, 38], "known": [0, 2, 3, 18, 23, 30, 31, 34, 38], "among": [0, 2, 3, 8, 9, 19, 31], "variabl": [0, 1, 2, 3, 4, 9, 18, 27, 28, 29, 30, 31, 32, 41], "core": [0, 3, 41], "part": 0, "infer": [0, 3, 4, 18, 20, 27, 28, 29, 30, 38, 41], "procedur": [0, 8, 29], "other": [0, 1, 2, 3, 9, 28, 29, 31, 41], "includ": [0, 1, 4, 31, 46], "support": [0, 8, 9, 31, 32, 39], "mont": 0, "carlo": 0, "click": 1, "here": [1, 2, 3, 11, 41, 42, 46], "download": [1, 42], "full": [1, 30], "exampl": [1, 2, 26, 28, 31, 34, 38, 41], "code": [1, 42], "model": [1, 2, 3, 8, 9, 18, 28, 29, 38, 41], "scm": [1, 43], "demonstr": [1, 41, 42], "how": [1, 3, 28, 29, 38, 41, 42], "The": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41], "when": [1, 2, 3, 11, 26, 28, 31, 40, 41, 44], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 44], "unobserv": [1, 4, 31, 41], "That": [1, 3, 34], "mean": [1, 2, 3, 9, 27, 28, 29, 30, 41], "ani": [1, 3, 4, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 41], "set": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 46], "common": [1, 41], "caus": [1, 41, 46], "In": [1, 2, 3, 9, 11, 25, 41, 46], "word": [1, 3, 41], "exogen": 1, "assum": [1, 3, 11, 27, 30], "author": 1, "adam": [1, 46], "li": [1, 46], "adam2392": 1, "gmail": 1, "com": [1, 27, 39], "licens": 1, "bsd": 1, "3": [1, 2, 3, 13, 14, 29, 30, 32, 39, 41], "claus": 1, "import": [1, 2, 11, 41], "numpi": [1, 41], "np": [1, 11, 33, 41], "networkx": [1, 5, 6, 27, 30, 31, 38, 41, 46], "nx": [1, 18, 27, 28, 29, 30, 31, 34, 41], "scipi": [1, 11], "stat": [1, 9, 15, 16, 17], "pywhy_graph": [1, 3, 41], "viz": [1, 41], "draw": [1, 41], "ci": [1, 2, 3, 8, 27, 28, 29, 30, 41, 43, 46], "gsquarecitest": [1, 41, 43], "oracl": [1, 41], "panda": [1, 27, 30], "pd": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 46], "dowhi": 1, "gcm": 1, "util": [1, 4, 38], "gener": [1, 2, 3, 7, 8, 9, 11, 13, 14, 24, 41, 42, 46], "set_random_se": 1, "first": [1, 3, 11, 20, 23, 28, 39, 40, 41], "start": [1, 4, 31], "induc": [1, 41], "graph": [1, 3, 4, 5, 18, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 41, 46], "which": [1, 2, 3, 7, 8, 9, 10, 11, 19, 26, 27, 28, 29, 30, 31, 33, 41, 46], "can": [1, 2, 3, 9, 11, 19, 22, 24, 26, 27, 28, 29, 30, 31, 34, 38, 41, 42], "visual": [1, 28, 41], "due": [1, 3, 41], "markov": [1, 3, 18, 41], "assumpt": [1, 2, 4, 28, 29, 31, 40, 41, 43], "d": [1, 3, 18, 22, 23, 26, 28, 41, 46], "separ": [1, 3, 18, 26, 27, 28, 29, 30, 41, 46], "examin": 1, "condition": [1, 2, 7, 8, 13, 14], "random": [1, 2, 7, 8, 9, 11, 25], "seed": [1, 7, 8, 9, 11, 25, 41], "make": [1, 3, 40, 41], "reproduc": 1, "12345": 1, "rng": 1, "randomst": 1, "mycustommodel": 1, "predictionmodel": 1, "def": 1, "__init__": 1, "self": [1, 4, 31], "coeffici": 1, "fit": [1, 27, 28, 29, 30, 41], "x": [1, 2, 3, 7, 8, 9, 11, 19, 21, 26, 27, 28, 29, 30, 41], "y": [1, 2, 3, 7, 8, 9, 11, 19, 26, 27, 28, 29, 30], "noth": 1, "sinc": [1, 2, 46], "know": [1, 3, 28, 41], "ground": [1, 18, 41], "truth": [1, 18, 41], "predict": [1, 2, 7, 8, 9, 18, 28, 30, 33, 34], "return": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "clone": [1, 39], "don": 1, "t": [1, 9, 11, 41], "realli": 1, "need": [1, 2, 30, 41, 42], "actual": [1, 2], "1234": [1, 41], "result": [1, 3, 4, 28, 29, 32, 41], "z": [1, 2, 3, 11, 27, 28, 29, 30], "w": 1, "g": [1, 2, 3, 41], "digraph": [1, 4, 18, 34, 36, 41], "causal_model": 1, "probabilisticcausalmodel": 1, "set_causal_mechan": 1, "scipydistribut": 1, "binom": 1, "p": [1, 2, 7, 8, 9, 11, 15, 16, 17, 21, 22, 27, 28, 29, 30, 41], "0": [1, 2, 7, 8, 11, 13, 14, 18, 27, 28, 29, 30, 34, 38, 41, 44], "5": [1, 2, 3, 11, 14, 41], "n": [1, 20, 22, 27, 28, 29, 30, 41], "1": [1, 2, 3, 7, 8, 9, 11, 13, 14, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 38, 41, 44], "9": [1, 3, 18, 28, 30, 41], "additivenoisemodel": 1, "prediction_model": 1, "noise_model": 1, "8": [1, 3, 39], "would": [1, 2, 3, 26, 34, 41], "paramet": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34], "do": [1, 3], "anyth": 1, "method": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 30, 31, 46], "onli": [1, 2, 3, 8, 9, 13, 14, 25, 27, 28, 29, 30, 33, 34, 41], "ensur": [1, 41], "each": [1, 2, 3, 7, 8, 9, 11, 13, 14, 19, 24, 25, 27, 28, 29, 30, 31, 41], "fcm": 1, "correct": [1, 2, 41], "local": [1, 30, 41], "hash": [1, 31], "e": [1, 2, 3, 9, 11, 27, 28, 29, 30, 39, 41], "get": [1, 5, 6, 31], "inconsist": 1, "error": [1, 2, 9, 41], "modifi": 1, "afterward": 1, "updat": [1, 31, 46], "have": [1, 2, 3, 5, 6, 27, 30, 31, 34, 41, 46], "empti": [1, 2, 3, 4, 9, 28, 29, 31], "small": 1, "workaround": 1, "pre": [1, 46], "datafram": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30], "column": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 27, 28, 29, 30, 31, 33, 41], "sampl": [1, 2, 7, 8, 9, 11, 13, 14, 19, 21, 22, 24, 25, 27, 30, 38, 41, 46], "draw_sampl": 1, "num_sampl": 1, "500": 1, "print": [1, 41], "head": [1, 41], "seri": [1, 41], "col": 1, "uniqu": 1, "4": [1, 2, 3, 21, 22, 41], "00": 1, "": [1, 3, 13, 14, 27, 28, 30, 31, 33, 38, 41, 44], "mechan": 1, "node": [1, 3, 5, 6, 9, 18, 26, 27, 28, 29, 30, 31], "100": [1, 11, 14], "1665": 1, "07it": 1, "2": [1, 2, 3, 11, 18, 20, 28, 29, 30, 32, 33, 41], "row": [1, 2, 27, 30, 33], "dtype": [1, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 33], "graphviz": 1, "0x7f3c27709310": 1, "To": [1, 3, 28, 32, 38, 39, 41, 42], "constraint": [1, 4, 7, 10, 38, 41, 43, 46], "base": [1, 5, 6, 7, 10, 11, 13, 14, 27, 30, 38, 41, 43, 46], "wai": [1, 3, 4, 7, 8, 28, 29, 34, 41], "There": [1, 2, 3, 25, 28, 29, 41], "variou": [1, 2, 28, 29, 41], "evalu": [1, 41], "If": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 27, 28, 29, 30, 31, 33, 34, 41], "appli": [1, 3, 4, 9, 27, 30, 41], "real": [1, 41], "want": [1, 41], "best": [1, 41], "suit": [1, 2, 41, 46], "note": [1, 2, 3, 8, 9, 11, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 44], "becaus": [1, 2, 3, 26, 41], "finit": [1, 2, 41], "size": [1, 11, 27, 28, 29, 30, 41], "bound": [1, 2, 9, 21, 22], "incorrect": [1, 34, 41], "orient": [1, 3, 5, 27, 28, 30, 34, 41, 46], "edg": [1, 3, 4, 5, 6, 27, 28, 29, 30, 31, 33, 34, 41], "interest": [1, 3, 41], "ideal": [1, 41], "imbu": [1, 41], "queri": [1, 3, 18, 24, 41], "statement": [1, 3, 18, 41], "help": [1, 2, 41], "one": [1, 2, 3, 26, 27, 28, 29, 30, 32, 34, 41], "determin": [1, 2, 7, 8, 11, 27, 28, 30, 41], "what": [1, 2, 23, 30, 38, 41, 44], "ci_estim": [1, 27, 28, 29, 30, 41], "data_typ": [1, 16, 41], "discret": [1, 43], "pywhi": [1, 38, 39, 41, 46], "introduc": [1, 41], "departur": 1, "where": [1, 2, 3, 7, 8, 9, 11, 13, 14, 21, 22, 29, 30, 34, 41], "user": [1, 3, 31, 38, 41], "primari": [1, 41], "input": [1, 28, 41], "problem": [1, 2, 13, 14, 27, 30, 41], "approach": [1, 3, 8, 9, 28, 43], "encourag": [1, 38, 41], "novic": 1, "philosoph": [1, 41], "stone": [1, 41], "convert": [1, 2, 5, 6, 7, 10, 11, 13, 14, 30, 33, 41], "relationship": [1, 41], "With": [1, 2], "mindset": 1, "tend": [1, 41], "surrend": [1, 41], "task": [1, 41], "domain": [1, 4, 31, 41], "specif": [1, 5, 6, 7, 10, 27, 28, 29, 30, 38, 41], "enabl": [1, 7, 10, 41], "identifi": [1, 41], "contrast": 1, "kei": [1, 27, 28, 29, 30, 41], "strength": [1, 41], "guid": [1, 38, 41], "specifi": [1, 3, 41], "up": [1, 41], "front": [1, 41], "dag": [1, 3, 27, 30, 34, 38, 41], "befor": [1, 27, 28, 29, 30, 41], "ad": [1, 41], "address": [1, 41], "given": [1, 2, 3, 7, 8, 13, 14, 18, 20, 26, 27, 28, 29, 30, 33, 41], "those": [1, 3, 33, 41], "sens": [1, 30], "hous": [1, 41], "both": [1, 2, 9, 31, 41], "relev": [1, 32, 38, 41], "mai": [1, 2, 3, 25, 27, 33, 41], "downstream": [1, 41], "build": [1, 4, 8, 9, 31, 32, 38, 41], "altern": [1, 2, 3, 29, 41], "could": [1, 3, 41], "sai": [1, 34], "fix": [1, 11, 41, 44, 45, 46], "necessarili": [1, 2], "pure": 1, "cpdag": [1, 3, 30, 41], "therefor": [1, 8, 9, 28, 34], "caution": 1, "thei": [1, 2, 3, 18, 20, 29, 30], "leverag": [1, 2, 3], "id": 1, "estim": [1, 2, 7, 8, 9, 11, 14, 19, 20, 22, 27, 30, 31], "block": 1, "python": [1, 38, 39, 42], "included_edg": [1, 4, 31], "now": [1, 3, 28, 41], "readi": [1, 41], "show": [1, 3, 41], "output": [1, 3, 41], "scenario": [1, 41], "infinit": [1, 2, 41], "amount": [1, 2, 41], "complet": [1, 2, 3, 26, 27, 28, 29, 30, 41], "partial": [1, 3, 4, 27, 38, 41, 43], "direct": [1, 2, 3, 5, 28, 31, 34, 38, 41, 46], "acycl": [1, 3, 28, 38, 41], "equival": [1, 2, 3, 5, 30, 41], "encod": [1, 27, 28, 29, 41], "depend": [1, 2, 3, 11, 27, 28, 29, 30, 41, 46], "were": [1, 41], "graph_": [1, 30, 41], "dot_graph": 1, "render": 1, "outfil": 1, "oracle_cpdag": 1, "png": 1, "view": [1, 7, 8, 11, 41], "true": [1, 2, 13, 17, 19, 26, 27, 28, 29, 30, 31, 33, 34, 41], "perform": [1, 2, 25, 41], "hypothesi": [1, 2, 3, 7, 8, 9, 29, 30, 41], "presenc": [1, 3, 27, 41], "nois": [1, 41], "alwai": [1, 41], "possibl": [1, 3, 26, 27, 28, 29, 30, 31, 41], "mistak": [1, 34, 41], "fail": [1, 2, 3], "find": [1, 38], "between": [1, 2, 5, 6, 9, 18, 19, 23, 26, 27, 28, 30, 34, 41], "correspond": [1, 3, 11, 19, 22, 31], "collid": [1, 3, 26, 27, 28, 30, 41], "illustr": [1, 38], "implicit": 1, "type": [1, 2, 5, 6, 13, 14, 31, 32, 33, 34, 38, 41, 46], "ii": 1, "ci_cpdag": 1, "total": 1, "time": [1, 7, 8, 9, 11], "script": 1, "minut": 1, "456": 1, "second": [1, 3, 20, 23, 28], "sourc": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 42], "plot_pc_alg": 1, "py": [1, 39], "jupyt": [1, 42], "notebook": [1, 42], "ipynb": 1, "galleri": [1, 42], "sphinx": [1, 42], "probabilist": [2, 3], "two": [2, 3, 5, 6, 8, 9, 23, 26, 27, 28, 29, 30, 31, 34], "realiz": 2, "doe": [2, 3, 28, 33], "affect": 2, "distribut": [2, 3, 7, 8, 9, 11, 13, 14, 21, 22, 27, 30], "It": [2, 3, 9, 11, 30, 34], "fundament": [2, 43], "notion": 2, "probabl": [2, 41], "statist": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30, 41], "about": [2, 38, 41], "glean": 2, "observ": [2, 4, 10, 16, 18, 27, 29, 30, 31, 32, 40, 42, 43, 46], "test": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30, 31, 38, 46], "uncondit": 2, "margin": 2, "follow": [2, 3, 22, 23, 41], "present": [2, 3, 30, 40, 41], "brief": 2, "overview": 2, "special": [2, 11], "frame": 2, "null": [2, 3, 7, 8, 9, 11, 29, 30, 41], "pair": [2, 3, 26, 27, 30], "h_0": [2, 3, 9, 29], "perp": [2, 3, 9, 11, 28, 29, 30], "written": [2, 9], "term": [2, 8, 9, 20, 27, 41], "similarli": 2, "h_a": [2, 3], "neq": 2, "Then": [2, 3, 11, 39], "typic": [2, 9], "posit": 2, "accept": [2, 30], "upper": [2, 9, 21, 22], "rate": 2, "fals": [2, 13, 14, 27, 28, 29, 30, 34], "alpha": [2, 3, 27, 28, 29, 30, 41], "05": [2, 17, 27, 28, 29, 30, 41], "either": [2, 27, 30, 34, 41], "attempt": 2, "character": [2, 30], "asymptot": 2, "pvalu": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30], "comput": [2, 9, 11, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 33, 34, 41], "compar": [2, 27, 30, 33, 34, 38, 41, 46], "state": [2, 3, 4, 31, 32], "least": [2, 33], "extrem": 2, "By": [2, 11, 13, 14, 24, 27, 28, 29, 30], "reject": [2, 3], "claim": 2, "so": [2, 3, 25, 31, 41], "fact": 2, "cannot": [2, 41], "strictli": 2, "speak": 2, "howev": [2, 3, 41], "practic": [2, 3], "causal": [2, 7, 10, 16, 18, 27, 28, 29, 30, 31, 32, 33, 34, 38, 42, 43, 46], "discoveri": [2, 4, 7, 10, 16, 18, 27, 28, 30, 31, 32, 38, 42, 43], "still": [2, 3], "conclud": [2, 3], "though": 2, "plausibl": 2, "weak": 2, "unabl": 2, "captur": [2, 4, 41], "propos": [2, 11], "reason": [2, 18, 41], "like": [2, 7, 8, 9, 32, 34, 41, 46], "most": [2, 27, 28, 29, 30, 41], "power": [2, 3], "mind": 2, "certain": [2, 27, 28, 30, 41], "underli": [2, 3, 11], "cmi": [2, 11, 14], "formul": 2, "math": 2, "int": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 37], "log": [2, 11, 22, 23], "frac": [2, 11, 22], "As": 2, "equal": [2, 8, 9, 11, 31, 41], "exactli": [2, 41], "definit": [2, 21, 22, 28], "non": [2, 11, 31, 43], "parametr": [2, 43], "thu": [2, 3], "requir": [2, 26, 28, 29], "unfortun": 2, "notori": 2, "difficult": 2, "literatur": [2, 3], "summar": 2, "kraskov": 2, "stogbauer": 2, "grassberg": 2, "ksg": 2, "via": [2, 11, 27, 34, 39, 41, 46], "nearest": [2, 11, 13, 14, 24, 25], "neighbor": [2, 5, 6, 11, 13, 14, 24, 25, 26, 27, 28, 29, 30], "knn": [2, 24], "algorithm": [2, 3, 4, 6, 7, 10, 16, 18, 25, 27, 28, 29, 30, 31, 32, 38, 40, 42, 46], "wa": [2, 3, 46], "had": 2, "obtain": 2, "valu": [2, 9, 11, 13, 14, 15, 16, 17, 23, 26, 27, 28, 29, 30, 31, 41], "reli": [2, 28], "k": [2, 9, 11, 13, 14, 20, 24, 25, 38, 46], "nn": 2, "implement": [2, 8, 9, 11, 27, 30, 41, 46], "naiv": 2, "kdtree": [2, 24], "suffer": 2, "high": [2, 3, 11, 28], "dimens": [2, 3], "dimension": [2, 11, 28], "permut": [2, 13, 14, 25], "intellig": [2, 11, 27, 30], "manner": [2, 25], "worth": 2, "good": [2, 34], "effect": [2, 9, 41, 42], "For": [2, 3, 9, 11, 26, 27, 28, 29, 30, 34, 38, 41], "variant": [2, 3, 28, 29], "forest": 2, "adapt": [2, 11], "manifold": 2, "classif": [2, 13, 14, 46], "posterior": 2, "directli": [2, 4, 31], "plug": 2, "equat": 2, "normal": [2, 33], "fast": [2, 3, 27], "effici": [2, 38, 44, 45, 46], "attract": 2, "gaussiani": 2, "unrealist": 2, "chi": 2, "squar": [2, 9], "conting": 2, "tabl": 2, "number": [2, 7, 8, 9, 11, 19, 20, 24, 27, 28, 29, 30, 34], "level": [2, 3, 16, 27, 28, 29, 30], "across": 2, "exponenti": 2, "increas": 2, "semi": [2, 28, 43], "idea": 2, "been": [2, 3, 25, 28, 29], "shown": [2, 3], "robust": [2, 43], "machin": [2, 9, 11], "learn": [2, 8, 9, 11, 26, 27, 28, 29, 30, 31, 38, 40, 41, 42, 43, 46], "field": 2, "anoth": [2, 3, 7, 8, 25], "shuffl": [2, 11, 13, 14, 25], "setup": 2, "intuit": [2, 18], "similar": [2, 31], "unshuffl": 2, "achiev": 2, "trivial": 2, "50": [2, 41, 46], "accuraci": 2, "balanc": 2, "origin": [2, 13, 14], "suffici": [2, 3, 30], "uniformli": 2, "third": 2, "must": [2, 3, 4, 8, 9, 27, 28, 29, 30, 32, 33, 34], "subspac": [2, 11, 13, 14, 24], "close": 2, "maintain": [2, 38], "exist": [2, 27, 28, 29, 30], "cd": [2, 39, 43, 46], "invari": [2, 3], "exhibit": 2, "question": [2, 3], "whether": [2, 7, 8, 19, 27, 28, 29, 30, 34, 41], "p_": 2, "j": [2, 20, 22, 27], "p_i": [2, 7, 8], "denot": [2, 7, 8, 9, 32], "explicitli": 2, "come": 2, "indic": [2, 3, 7, 8, 9, 13, 14, 24, 25, 31, 41], "detect": [2, 3, 41], "kind": [2, 3, 41], "besid": 2, "entir": 2, "weight": [2, 7, 8, 9], "propens": [2, 7, 8, 9], "score": [2, 7, 8, 9, 21, 22], "6": [2, 3, 41], "von": [2, 23], "neumann": [2, 23], "7": [2, 3], "independ": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 38, 43, 46], "repres": [3, 38, 41], "graphic": [3, 41], "under": [3, 28, 29, 46], "faith": [3, 41], "well": [3, 31, 34, 38, 41], "intend": 3, "structur": [3, 4, 28, 29, 30, 31, 33, 34, 38, 40, 41, 46], "check": [3, 5, 6, 18, 25, 26, 27, 28, 29, 30, 31, 46], "At": 3, "varieti": 3, "better": 3, "themselv": 3, "section": 3, "properti": [3, 5, 6, 18], "impli": 3, "familiar": 3, "connect": [3, 5, 6], "On": [3, 27], "hand": 3, "map": [3, 28, 29, 31], "accident": 3, "occur": 3, "theori": 3, "issu": 3, "theoret": 3, "violat": [3, 41], "diagram": 3, "measur": [3, 11], "zero": 3, "veri": [3, 7, 10, 41], "problemat": 3, "might": [3, 41], "weakli": 3, "strong": 3, "frequent": 3, "almost": 3, "sure": 3, "higher": 3, "tackl": 3, "larg": [3, 11, 41], "activ": 3, "area": 3, "research": [3, 11, 38], "peter": [3, 18, 28, 30, 40], "clark": [3, 18, 28, 30, 40], "pc": [3, 10, 16, 18, 29, 32, 40, 42, 46], "sound": 3, "its": [3, 27, 28, 29, 30], "lack": 3, "latent": [3, 4, 10, 16, 18, 27, 28, 29, 31, 32, 38, 42, 46], "confound": [3, 10, 16, 18, 27, 29, 30, 32, 38, 42, 46], "three": [3, 32, 41], "skeleton": [3, 26, 27, 28, 29, 30, 46], "phase": [3, 28], "process": [3, 31], "along": 3, "trim": 3, "track": [3, 29], "A": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 27, 28, 29, 30, 41], "contain": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 28, 29, 31], "unshield": 3, "triplet": 3, "take": [3, 13, 14, 28, 33, 41], "path": [3, 26, 27, 28, 29], "star": 3, "endpoint": [3, 5, 34], "pag": [3, 27, 28, 34, 38], "circl": [3, 5, 34], "determinist": [3, 30], "onc": [3, 33], "logic": [3, 27, 30], "rule": [3, 27, 30, 46], "u": [3, 5, 6, 9], "call": [3, 4, 27, 31, 32, 34], "meek": [3, 30], "repeatedli": 3, "until": 3, "chang": [3, 44, 45, 46], "made": 3, "without": [3, 10, 16, 18, 25, 29, 31, 32, 38, 42], "fci": [3, 46], "ancestr": [3, 27, 38], "even": 3, "select": [3, 26, 27, 28, 29, 30, 33, 46], "bia": [3, 11, 20, 27, 46], "few": 3, "minor": 3, "modif": 3, "outlin": [3, 8, 9], "compos": 3, "same": [3, 9, 19, 27, 30, 33, 34], "tri": [3, 25], "potenti": [3, 26, 46], "restart": 3, "scratch": 3, "chosen": [3, 25, 27, 30], "describ": 3, "four": 3, "add": [3, 4, 5, 6, 31, 39, 46], "six": 3, "account": [3, 27, 34], "access": [3, 32], "multipl": [3, 41], "improv": [3, 46], "target": [3, 31, 34], "psi": [3, 11], "briefli": 3, "strategi": [3, 26], "conserv": 3, "etc": 3, "creat": [4, 5, 6, 31, 32, 41, 46], "context": [4, 27, 28, 29, 30, 32, 38, 46], "ergonom": 4, "meant": 4, "sole": 4, "NOT": [4, 31], "instanti": [4, 31], "instead": [4, 31], "popul": [4, 33], "option": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 27, 28, 29, 30, 32, 33, 34, 41], "union": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37], "none": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37], "exclud": [4, 5, 31], "networkxgraph": 4, "instanc": [4, 31, 32, 33, 34], "excluded_edg": [4, 31], "exclus": 4, "inclus": 4, "init_graph": [4, 31], "new": [4, 32, 38, 41, 44], "latent_vari": [4, 31], "float": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 37], "str": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 37], "tupl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 35, 37], "default": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24, 25, 27, 28, 29, 30, 31, 33, 34], "neither": [4, 31], "nor": [4, 31], "presum": [4, 31], "consist": [4, 18, 31, 34, 41], "observed_vari": [4, 31], "state_vari": [4, 31, 32], "var": [4, 31], "persist": [4, 31], "intermedi": [4, 31], "step": [4, 13, 14, 31], "dict": [4, 5, 27, 28, 29, 30, 31, 37], "list": [4, 9, 16, 27, 28, 29, 30, 31, 33, 37, 38, 46], "arg": [5, 6], "kwarg": [5, 6], "protocol": [5, 6, 38], "attribut": [5, 6, 28, 29, 30, 31], "bidirected_edge_nam": 5, "bidirect": [5, 34], "circle_edge_nam": 5, "directed_edge_nam": 5, "excluded_tripl": 5, "tripl": 5, "iter": [5, 6, 27, 28, 29, 30], "over": [5, 6, 27, 30, 32, 33], "undirected_edge_nam": 5, "undirect": [5, 6, 27, 28, 29, 30, 33, 34, 41], "add_edg": [5, 6], "v": [5, 6], "edge_typ": [5, 6], "add_nod": [5, 6], "node_for_ad": [5, 6], "attr": [5, 6], "copi": [5, 6, 31, 32], "frozenset": [5, 31], "has_edg": [5, 6], "bool": [5, 6, 7, 8, 9, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34], "mark_unfaithful_tripl": 5, "v_i": 5, "v_j": 5, "mark": 5, "unfaith": 5, "put": 5, "orient_uncertain_edg": 5, "uncertain": 5, "predecessor": 5, "point": [5, 11], "remove_edg": [5, 6], "remov": [5, 6, 46], "remove_edges_from": [5, 6], "remove_nod": [5, 6], "subgraph": [5, 6, 34], "successor": 5, "to_undirect": [5, 6], "fulli": [5, 6], "abstract": [7, 8, 10, 11, 12, 13, 15, 16], "condit": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 27, 28, 29, 30, 33, 38, 43, 46], "expect": [7, 10], "lightweight": [7, 10], "anyon": [7, 10], "api": [7, 10, 18, 38, 44, 45, 46], "compute_nul": [7, 8, 9], "e_hat": [7, 8, 9], "_supportsarrai": [7, 8, 9, 19, 20, 21, 22, 23, 24, 25], "_nestedsequ": [7, 8, 9, 19, 20, 21, 22, 23, 24, 25], "complex": [7, 8, 9, 19, 20, 21, 22, 23, 24, 25], "byte": [7, 8, 9, 19, 20, 21, 22, 23, 24, 25], "null_rep": [7, 8, 9], "1000": [7, 8, 9, 11, 17, 27, 30], "random_st": [7, 8, 9, 13], "arrai": [7, 8, 9, 19, 20], "shape": [7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 33], "n_sampl": [7, 8, 9, 18, 20, 24, 25], "group_ind": [7, 8, 9], "n_features_x": [7, 8, 9, 19], "covari": [7, 8, 9, 11, 24], "n_features_i": [7, 8, 9, 19], "outcom": [7, 8, 9], "null_dist": [7, 8, 9], "df": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "y_var": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29], "group_col": [7, 8, 9], "x_var": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29], "try": [7, 8], "p_j": [7, 8], "belong": [7, 8, 9], "metric": [8, 9, 13, 14, 19, 20, 22, 46], "rbf": [8, 9, 17, 19, 20], "distance_metr": [8, 9, 19, 20], "euclidean": [8, 9, 19, 20], "kwidth": [8, 19, 20], "n_job": [8, 9, 11, 14, 17, 19, 20, 24, 28, 29], "propensity_model": [8, 9], "propensity_est": [8, 9], "bregman": [8, 23, 43], "diverg": [8, 21, 22, 23, 43], "kernel": [8, 9, 19, 20, 43], "distanc": [8, 9, 19, 20, 34, 46], "width": [8, 9, 19, 20], "kernel_util": 8, "compute_kernel": 8, "cpu": [8, 11, 24, 28, 29], "callabl": [8, 9, 13, 14, 27], "sklearn": [8, 9, 13, 14, 19, 31, 33], "linear_model": [8, 9], "logisticregress": [8, 9], "predict_proba": [8, 9], "order": [8, 9, 25, 27, 28, 29, 30, 33, 41], "http": [8, 9, 11, 27, 28, 39], "scikit": [8, 9], "org": [8, 9, 27, 28, 39], "stabl": [8, 9], "glossari": [8, 9], "html": [8, 9, 11], "array_lik": [8, 9, 13, 14, 19, 20, 21, 22, 23, 24, 25, 33], "n_group": [8, 9], "match": [8, 9, 41], "cardin": [8, 9], "argument": [8, 9, 18, 27, 30, 34], "current": [8, 9, 26, 31, 34], "binari": [8, 9, 13, 14, 16, 34, 41, 43], "footbibliographi": 8, "rubric": 8, "l2": [9, 19], "kwidth_x": [9, 17], "kwidth_i": [9, 17], "distancemetr": 9, "pairwis": [9, 19, 27, 30], "regular": 9, "invert": 9, "matric": [9, 23], "respect": [9, 11, 28], "singl": [9, 28, 34], "choos": [9, 25, 26, 43], "minim": 9, "median": [9, 19], "job": [9, 19, 20], "run": [9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 26, 27, 28, 29, 30, 39], "parallel": [9, 19, 20, 46], "junhyung": 9, "park": 9, "uri": 9, "shalit": 9, "bernhard": 9, "sch": 9, "\u00f6": 9, "lkopf": 9, "krikamol": 9, "muandet": 9, "treatment": 9, "embed": 9, "regress": 9, "intern": [9, 11, 31], "confer": [9, 11, 30], "8401": 9, "8412": 9, "pmlr": [9, 11], "2021": 9, "aris": 9, "collect": 9, "f": [9, 21, 22, 31, 41], "z_covari": [10, 11, 12, 13, 14, 15, 16, 17, 18], "standard": [10, 11, 12, 13, 14, 15, 16, 17, 34, 41], "transform": 11, "rank": 11, "n_shuffle_nbr": [11, 14], "n_shuffl": [11, 14], "random_se": [11, 14, 25], "mutual": [11, 43, 46], "smaller": [11, 41], "fraction": 11, "uniform": 11, "avail": [11, 26, 39], "within": [11, 19, 27, 34], "defaultrng": 11, "iiint": 11, "cdot": 11, "dx": 11, "dy": 11, "dz": 11, "seen": [11, 28, 29, 41], "henc": [11, 29], "widehat": 11, "sum_": [11, 20, 22], "k_": 11, "xz": 11, "yz": 11, "digamma": 11, "hyper": 11, "cube": 11, "around": [11, 41], "densiti": 11, "smooth": 11, "although": 11, "unlik": 11, "bandwidth": 11, "larger": 11, "lower": 11, "varianc": 11, "signific": [11, 27, 28, 29, 30, 41], "slightli": 11, "neg": 11, "while": [11, 29, 41], "quantiti": 11, "continu": [11, 46], "jakob": 11, "rung": 11, "amo": 11, "storkei": 11, "fernando": 11, "perez": 11, "cruz": 11, "editor": 11, "proceed": [11, 30], "twenti": 11, "artifici": [11, 27, 30], "volum": [11, 18, 28, 30], "84": 11, "938": 11, "947": 11, "09": 11, "11": [11, 28, 41], "apr": 11, "2018": 11, "url": [11, 27, 28], "mlr": 11, "press": [11, 18, 28, 30], "v84": 11, "runge18a": 11, "lambda_": 12, "cressi": 12, "read": 12, "clf": [13, 14], "baseestim": [13, 14], "skorchmodel": 13, "accuracy_scor": 13, "bootstrap": [13, 14], "n_iter": [13, 14], "20": [13, 14, 46], "correct_bia": 13, "threshold": [13, 14, 17, 41], "03": [13, 14], "test_siz": [13, 14], "generate_train_test_data": [13, 14], "train": [13, 14], "ccit": [13, 14, 46], "x_train": [13, 14], "y_train": [13, 14], "x_test": [13, 14], "y_test": [13, 14], "compris": [13, 14], "joint": [13, 14, 21, 22], "f_divergence_scor": 14, "ep": [14, 22], "1e": [14, 17], "08": [14, 27], "correlation_matrix": 15, "kernel_x": 17, "kernel_i": 17, "kernel_z": 17, "null_siz": 17, "approx_with_gamma": 17, "kwidth_z": 17, "unit": 18, "n_variabl": 18, "matrix": [18, 19, 20, 23, 33, 34, 46], "judea": 18, "pearl": 18, "cambridg": 18, "univers": 18, "usa": 18, "2nd": 18, "edit": 18, "2009": 18, "isbn": [18, 28, 30], "052189560x": 18, "spirt": [18, 28, 30], "glymour": [18, 28, 30], "richard": [18, 28, 30], "schein": [18, 28, 30], "causat": [18, 28, 30], "search": [18, 28, 30], "81": [18, 28, 30, 46], "mit": [18, 28, 30], "01": [18, 28, 30], "1993": [18, 28, 30], "978": [18, 28, 30], "4612": [18, 28, 30], "7650": [18, 28, 30], "doi": [18, 27, 28, 30], "10": [18, 27, 28, 30, 41], "1007": [18, 28, 30], "2748": [18, 28, 30], "center": [19, 20], "n_samples_x": 19, "n_samples_i": 19, "string": 19, "pairwise_kernel": 19, "gaussian": 19, "valid": [19, 28, 29, 41], "pairwise_dist": 19, "featur": [19, 44, 45, 46], "med": 19, "correntropi": 20, "n_featur": [20, 23], "symmetr": [20, 33], "formula": [20, 22], "x_i": 20, "y_i": [20, 22], "y_j": [20, 22], "togeth": 20, "unbias": 20, "y_stat_q": [21, 22], "y_stat_p": [21, 22], "kl": [21, 22], "revers": [21, 22, 31], "give": [21, 22], "sake": [21, 22], "gradient": [21, 22], "descent": [21, 22], "d_": 21, "q": [21, 22], "le": 21, "sup_f": 21, "e_": 21, "sim": 21, "exp": 21, "n_samples_q": [21, 22], "variat": [21, 22], "n_samples_p": [21, 22], "f_div": 21, "hat": 22, "_": 22, "l": [22, 41], "m": 22, "b": [23, 41], "psd": 23, "div": 23, "tr": 23, "z_arr": 24, "n_features_z": 24, "space": 24, "joblib": [24, 46], "nbr": [25, 26, 27, 28, 29, 30], "restrict": [25, 28, 29], "index": [25, 33, 38], "restricted_perm": 25, "final": 25, "repeat": 25, "detail": [25, 27, 28, 29, 30, 38], "goe": 25, "through": [25, 27, 30, 38], "look": [25, 38, 41, 42], "closest": 25, "next": 25, "replac": 25, "necessari": [25, 28], "enumer": [26, 28], "metaclass": 26, "consid": [26, 27, 28, 29, 30, 34], "combin": [26, 28, 29], "nbrs_path": 26, "neighbors_path": [26, 27, 29, 30], "simpl": [26, 31], "initi": [26, 28, 29, 30], "pds_path": [26, 27, 28], "lie": [26, 28], "baseconditionalindependencetest": [27, 28, 29, 30], "min_cond_set_s": [27, 28, 29, 30], "max_cond_set_s": [27, 28, 29, 30], "max_combin": [27, 28, 29, 30], "condsel_method": [27, 28, 29, 30], "conditioningsetselect": [27, 28, 29, 30, 43], "apply_orient": [27, 30], "keep_sort": [27, 28, 29, 30], "max_it": [27, 30], "max_path_length": [27, 28], "selection_bia": 27, "pds_condsel_method": 27, "oper": 27, "keyword": [27, 30], "minimum": [27, 28, 29, 30], "constrain": [27, 30, 41], "spent": [27, 28, 29, 30], "maximum": [27, 28, 29, 30], "limit": [27, 28, 29, 30], "everi": [27, 28, 29, 30, 34], "increment": [27, 28, 29, 30], "control": [27, 28, 29, 30, 43], "conjunct": [27, 28, 29, 30, 31], "strongest": [27, 28, 29, 30], "per": [27, 28, 29, 30], "zhang": 27, "r0": [27, 30], "arrowhead": [27, 30], "tail": 27, "keep": [27, 28, 29, 30], "sort": [27, 28, 29, 30, 33], "weakest": [27, 28, 29, 30], "largest": [27, 28, 29, 30], "lowest": [27, 28, 29, 30], "lexograph": [27, 30], "ith": [27, 30], "pa": [27, 30], "parent": [27, 30], "length": [27, 28], "discrimin": [27, 28], "unlimit": [27, 28], "realiti": 27, "quit": 27, "expens": 27, "jiji": 27, "172": 27, "16": [27, 28, 46], "1873": 27, "1896": 27, "2008": 27, "www": 27, "sciencedirect": 27, "scienc": 27, "articl": 27, "pii": 27, "s0004370208001008": 27, "1016": 27, "artint": 27, "001": 27, "convert_skeleton_graph": [27, 30], "evaluate_edg": [27, 28, 29, 30], "test_stat": [27, 28, 29, 30], "constitut": [27, 30], "endogen": [27, 30], "dictionari": [27, 28, 29, 30, 31, 32], "rais": [27, 30, 31], "runtimeerror": [27, 30, 31], "impos": [27, 30], "constructor": [27, 30], "learn_skeleton": [27, 30], "sep_set": [27, 28, 29, 30], "skel_graph": [27, 30], "exhaust": [27, 29, 30, 38], "adjac": [27, 29, 30, 33, 34], "orient_edg": [27, 30], "equivalenceclass": [27, 30], "notimplementederror": 27, "orient_unshielded_tripl": [27, 30], "separatingset": [27, 30], "second_stage_condsel_method": 28, "markovian": [28, 29, 43], "proce": [28, 29], "candid": [28, 34], "possibli": 28, "learnskeleton": [28, 46], "superset": 28, "figur": 28, "17": 28, "18": 28, "rfci": [28, 29], "paper": [28, 29], "diego": 28, "colombo": 28, "marlo": 28, "h": 28, "maathui": 28, "marku": 28, "kalisch": 28, "thoma": 28, "richardson": 28, "annal": 28, "40": 28, "294": 28, "321": 28, "2012": 28, "1214": 28, "aos940": 28, "adj_graph_": [28, 29], "discov": [28, 29, 30, 41], "store": [28, 29, 31], "smallest": [28, 29], "encount": [28, 29], "sep_set_": [28, 29], "context_": [28, 29], "min_cond_set_size_": [28, 29], "max_cond_set_size_": [28, 29], "max_combinations_": [28, 29], "n_iters_": [28, 29], "max_path_length_": 28, "th": 28, "ones": 29, "rememb": 29, "link": [29, 44], "essenti": 29, "sg": 29, "tradit": 29, "associ": 30, "christoph": 30, "explan": 30, "background": 30, "eleventh": 30, "uncertainti": 30, "montreal": 30, "qu": 30, "02": 30, "2013": 30, "separating_sets_": 30, "nest": [30, 31], "being": 30, "represent": 30, "These": [30, 40], "rest": 30, "_protocol": 31, "num_distribut": 31, "obs_distribut": 31, "intervention_target": 31, "factori": [31, 46], "symmetric_diff_map": 31, "sigma_map": 31, "f_node": 31, "dure": 31, "intervent": [31, 43], "unknown": 31, "valueerror": 31, "prior": 31, "alongsid": 31, "priori": [31, 41], "explicit": [31, 42], "yet": 31, "done": 31, "ill": 31, "leav": 31, "isomorph": 31, "is_isomorph": [31, 41], "__hash__": 31, "add_state_vari": 31, "deepcopi": 31, "get_non_f_nod": 31, "get_param": 31, "deep": 31, "todo": 31, "pipelin": 31, "subobject": 31, "param": 31, "reverse_sigma_map": 31, "sigma": 31, "set_param": 31, "latter": 31, "compon": 31, "__": 31, "learner": [31, 46], "on_miss": 31, "warn": [31, 41], "ignor": 31, "behavior": [31, 41], "userwarn": 31, "state_var": 31, "create_us": 32, "context_build": 32, "contextbuild": [32, 46], "dataclass": 32, "metadata": 32, "except": [32, 41], "again": 32, "true_graph": [33, 34], "pred_graph": [33, 34], "label": 33, "ndarrai": 33, "scalartyp": 33, "confus": [33, 46], "n_class": 33, "reorder": 33, "subset": 33, "appear": 33, "y_true": 33, "y_pred": 33, "pred": 33, "cm": 33, "confusion_matrix": 33, "consider": 33, "direction": 33, "double_for_anticaus": 34, "ham": [34, 46], "shd": 34, "miss": 34, "count": 34, "wrong": 34, "remark": 34, "mixededgegraph": [34, 38, 46], "infin": 34, "you": [34, 38, 41, 42], "bayesian": 34, "network": [34, 41], "sub": 34, "circular": 34, "systemat": 34, "alia": [35, 36, 37], "mix": 38, "admg": 38, "top": 38, "your": [38, 41], "pull": 38, "request": 38, "walk": 38, "pleas": 38, "tool": 38, "public": 38, "numer": 38, "instal": 38, "usag": 38, "tutori": [38, 41, 46], "basic": [38, 42], "releas": 38, "histori": 38, "version": [38, 44], "develop": [38, 46], "who": [38, 46], "contribut": [38, 46], "codebas": 38, "contributor": 38, "page": [38, 44], "modul": 38, "pip": 39, "poetri": 39, "pypi": 39, "project": [39, 46], "recommend": 39, "repositori": [39, 46], "github": 39, "git": 39, "why": 39, "sever": 40, "basi": 40, "highlight": 41, "challeng": 41, "bnlearn": 41, "bn": 41, "load": 41, "import_exampl": 41, "asia": [41, 46], "renam": 41, "tub": 41, "lung": 41, "bronc": 41, "smoke": 41, "xrai": 41, "dysp": 41, "inplac": 41, "gt": 41, "extract": 41, "file": 41, "ll": 41, "studi": 41, "expert": 41, "system": 41, "diagnos": 41, "diseas": 41, "lauritzen": 41, "spiegelhalt": 41, "1988": 41, "respiratori": 41, "symption": 41, "evid": 41, "goal": 41, "distinguish": 41, "tuberculosi": 41, "cancer": 41, "bronchiti": 41, "patient": 41, "end": 41, "ground_truth_edg": 41, "ground_truth": 41, "po": 41, "spring_layout": 41, "with_label": 41, "interpret": 41, "recent": 41, "visit": 41, "smoker": 41, "chest": 41, "rai": 41, "dyspnoea": 41, "difficulti": 41, "breath": 41, "symptom": 41, "further": 41, "learnabl": 41, "alon": 41, "mixtur": 41, "technic": 41, "cpdag_direct": 41, "cpdag_undirect": 41, "ground_truth_cpdag": 41, "commonli": 41, "simul": 41, "sometim": 41, "erron": 41, "conclus": 41, "sequenc": 41, "accumul": 41, "adjust": 41, "comparison": 41, "compens": 41, "thing": 41, "arguabl": 41, "decreas": 41, "favor": 41, "heurist": 41, "rigor": 41, "anti": 41, "pattern": 41, "librari": [41, 44], "14": 41, "56": 41, "tb": 41, "against": 41, "57": 41, "58": 41, "match_direct": 41, "sub_directed_graph": 41, "match_undirect": 41, "sub_undirected_graph": 41, "maxim": 41, "chanc": 41, "hard": 41, "inabl": 41, "lead": 41, "beyond": 41, "struggl": 41, "philosophi": 41, "dodiscoveri": 41, "easi": 41, "discuss": 41, "journal": 41, "royal": 41, "societi": 41, "157": 41, "224": 41, "abl": 42, "everyth": 42, "concept": 42, "auto_examples_python": 42, "zip": 42, "auto_examples_jupyt": 42, "hyperparamet": 43, "overfit": 43, "cmitest": [43, 46], "classifiercmitest": [43, 46], "pearson": 43, "correl": 43, "fisherzcitest": 43, "categor": [43, 46], "kernelcitest": 43, "classifi": [43, 46], "classifiercitest": [43, 46], "kernelcdtest": [43, 46], "bregmancdtest": [43, 46], "major": [44, 45, 46], "enhanc": [44, 45, 46], "tip": 44, "subscrib": 44, "io": 44, "notifi": 44, "integr": 46, "15": 46, "submodul": 46, "chri": 46, "trevino": 46, "42": 46, "confusion_matrix_network": 46, "48": 46, "28": 46, "30": 46, "learnsemimarkovianskeleton": 46, "52": 46, "structure_hamming_dist": 46, "55": 46, "pr": 46, "branch": 46, "conflict": 46, "74": 46, "robert": 46, "osazuwa": 46, "ness": 46, "67": 46, "wrapper": 46, "gin": 46, "94": 46, "82": 46, "83": 46, "85": 46, "jaron": 46, "lee": 46, "106": 46, "commit": 46, "hook": 46, "lint": 46, "format": 46, "117": 46, "127": 46, "128": 46, "thank": 46, "everyon": 46, "mainten": 46, "incept": 46}, "objects": {"": [[0, 0, 0, "-", "dodiscover"]], "dodiscover": [[4, 1, 1, "", "ContextBuilder"], [5, 1, 1, "", "EquivalenceClass"], [6, 1, 1, "", "Graph"], [3, 0, 0, "-", "constraint"], [32, 4, 1, "", "make_context"]], "dodiscover.ContextBuilder": [[4, 2, 1, "", "build"], [4, 2, 1, "", "edges"], [4, 2, 1, "", "excluded_edges"], [4, 2, 1, "", "included_edges"], [4, 2, 1, "", "init_graph"], [4, 2, 1, "", "latent_variables"], [4, 2, 1, "", "observed_variables"], [4, 2, 1, "", "state_variable"], [4, 2, 1, "", "state_variables"], [4, 2, 1, "", "variables"]], "dodiscover.EquivalenceClass": [[5, 2, 1, "", "add_edge"], [5, 2, 1, "", "add_node"], [5, 3, 1, "", "bidirected_edge_name"], [5, 3, 1, "", "circle_edge_name"], [5, 2, 1, "", "copy"], [5, 3, 1, "", "directed_edge_name"], [5, 2, 1, "", "edges"], [5, 3, 1, "", "excluded_triples"], [5, 2, 1, "", "has_edge"], [5, 2, 1, "", "mark_unfaithful_triple"], [5, 2, 1, "", "neighbors"], [5, 3, 1, "", "nodes"], [5, 2, 1, "", "orient_uncertain_edge"], [5, 2, 1, "", "predecessors"], [5, 2, 1, "", "remove_edge"], [5, 2, 1, "", "remove_edges_from"], [5, 2, 1, "", "remove_node"], [5, 2, 1, "", "subgraph"], [5, 2, 1, "", "successors"], [5, 2, 1, "", "to_undirected"], [5, 3, 1, "", "undirected_edge_name"]], "dodiscover.Graph": [[6, 2, 1, "", "add_edge"], [6, 2, 1, "", "add_node"], [6, 2, 1, "", "copy"], [6, 2, 1, "", "edges"], [6, 2, 1, "", "has_edge"], [6, 2, 1, "", "neighbors"], [6, 3, 1, "", "nodes"], [6, 2, 1, "", "remove_edge"], [6, 2, 1, "", "remove_edges_from"], [6, 2, 1, "", "remove_node"], [6, 2, 1, "", "subgraph"], [6, 2, 1, "", "to_undirected"]], "dodiscover.cd": [[7, 1, 1, "", "BaseConditionalDiscrepancyTest"], [8, 1, 1, "", "BregmanCDTest"], [9, 1, 1, "", "KernelCDTest"]], "dodiscover.cd.BaseConditionalDiscrepancyTest": [[7, 2, 1, "", "compute_null"], [7, 2, 1, "", "test"]], "dodiscover.cd.BregmanCDTest": [[8, 2, 1, "", "compute_null"], [8, 2, 1, "", "test"]], "dodiscover.cd.KernelCDTest": [[9, 2, 1, "", "compute_null"], [9, 2, 1, "", "test"]], "dodiscover.ci": [[10, 1, 1, "", "BaseConditionalIndependenceTest"], [11, 1, 1, "", "CMITest"], [12, 1, 1, "", "CategoricalCITest"], [13, 1, 1, "", "ClassifierCITest"], [14, 1, 1, "", "ClassifierCMITest"], [15, 1, 1, "", "FisherZCITest"], [16, 1, 1, "", "GSquareCITest"], [17, 1, 1, "", "KernelCITest"], [18, 1, 1, "", "Oracle"]], "dodiscover.ci.BaseConditionalIndependenceTest": [[10, 2, 1, "", "test"]], "dodiscover.ci.CMITest": [[11, 2, 1, "", "test"]], "dodiscover.ci.CategoricalCITest": [[12, 2, 1, "", "test"]], "dodiscover.ci.ClassifierCITest": [[13, 2, 1, "", "generate_train_test_data"], [13, 2, 1, "", "test"]], "dodiscover.ci.ClassifierCMITest": [[14, 2, 1, "", "generate_train_test_data"], [14, 2, 1, "", "test"]], "dodiscover.ci.FisherZCITest": [[15, 2, 1, "", "test"]], "dodiscover.ci.GSquareCITest": [[16, 2, 1, "", "test"]], "dodiscover.ci.KernelCITest": [[17, 2, 1, "", "test"]], "dodiscover.ci.Oracle": [[18, 2, 1, "", "test"]], "dodiscover.ci.kernel_utils": [[19, 4, 1, "", "compute_kernel"], [20, 4, 1, "", "corrent_matrix"], [21, 4, 1, "", "f_divergence_score"], [22, 4, 1, "", "kl_divergence_score"], [23, 4, 1, "", "von_neumann_divergence"]], "dodiscover.ci.monte_carlo": [[24, 4, 1, "", "generate_knn_in_subspace"], [25, 4, 1, "", "restricted_nbr_permutation"]], "dodiscover.constraint": [[26, 1, 1, "", "ConditioningSetSelection"], [27, 1, 1, "", "FCI"], [28, 1, 1, "", "LearnSemiMarkovianSkeleton"], [29, 1, 1, "", "LearnSkeleton"], [30, 1, 1, "", "PC"]], "dodiscover.constraint.ConditioningSetSelection": [[26, 5, 1, "", "COMPLETE"], [26, 5, 1, "", "NBRS"], [26, 5, 1, "", "NBRS_PATH"], [26, 5, 1, "", "PDS"], [26, 5, 1, "", "PDS_PATH"]], "dodiscover.constraint.FCI": [[27, 2, 1, "", "evaluate_edge"], [27, 2, 1, "", "fit"], [27, 2, 1, "", "learn_skeleton"], [27, 2, 1, "", "orient_edges"], [27, 2, 1, "", "orient_unshielded_triples"]], "dodiscover.constraint.LearnSemiMarkovianSkeleton": [[28, 2, 1, "", "evaluate_edge"], [28, 2, 1, "", "fit"]], "dodiscover.constraint.LearnSkeleton": [[29, 2, 1, "", "evaluate_edge"], [29, 2, 1, "", "fit"]], "dodiscover.constraint.PC": [[30, 2, 1, "", "convert_skeleton_graph"], [30, 2, 1, "", "evaluate_edge"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "learn_skeleton"], [30, 2, 1, "", "orient_edges"], [30, 2, 1, "", "orient_unshielded_triples"]], "dodiscover.context": [[31, 1, 1, "", "Context"]], "dodiscover.context.Context": [[31, 2, 1, "", "__hash__"], [31, 2, 1, "", "add_state_variable"], [31, 2, 1, "", "copy"], [31, 2, 1, "", "get_non_f_nodes"], [31, 2, 1, "", "get_params"], [31, 2, 1, "", "reverse_sigma_map"], [31, 2, 1, "", "set_params"], [31, 2, 1, "", "state_variable"]], "dodiscover.metrics": [[33, 4, 1, "", "confusion_matrix_networks"], [34, 4, 1, "", "structure_hamming_dist"]], "dodiscover.typing": [[35, 6, 1, "", "Column"], [36, 6, 1, "", "NetworkxGraph"], [37, 6, 1, "", "SeparatingSet"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "context": [0, 1, 31, 41], "causal": [0, 1, 3, 40, 41], "discoveri": [0, 1, 3, 40, 41], "constraint": [0, 3, 26, 27, 28, 29, 30], "base": [0, 2, 3], "structur": [0, 1], "learn": [0, 1, 3], "compar": 0, "algorithm": [0, 1, 41], "type": [0, 35, 36, 37], "graph": [0, 6], "protocol": 0, "condit": [0, 1, 2, 3, 41], "test": [0, 1, 41], "independ": [0, 1, 2, 41], "k": 0, "sampl": 0, "util": 0, "pc": [1, 30, 41], "from": [1, 41], "observ": [1, 3, 41], "data": [1, 2, 3, 41], "without": [1, 40, 41], "latent": [1, 40, 41], "confound": [1, 40, 41], "simul": 1, "some": [1, 41], "instanti": [1, 41], "defin": [1, 41], "run": [1, 41], "mutual": 2, "inform": 2, "partial": 2, "pearson": 2, "correl": 2, "discret": 2, "categor": 2, "binari": 2, "kernel": 2, "approach": 2, "classifi": 2, "discrep": 2, "bregman": 2, "diverg": 2, "fundament": 3, "assumpt": 3, "non": 3, "parametr": 3, "markovian": 3, "scm": 3, "semi": 3, "intervent": 3, "choos": 3, "set": 3, "hyperparamet": 3, "control": 3, "overfit": 3, "robust": 3, "dodiscov": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42], "contextbuild": 4, "equivalenceclass": 5, "cd": [7, 8, 9], "baseconditionaldiscrepancytest": 7, "bregmancdtest": 8, "kernelcdtest": 9, "ci": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "baseconditionalindependencetest": 10, "exampl": [10, 16, 18, 32, 42], "us": [10, 16, 18, 32, 42], "cmitest": 11, "categoricalcitest": 12, "classifiercitest": 13, "classifiercmitest": 14, "fisherzcitest": 15, "gsquarecitest": 16, "kernelcitest": 17, "oracl": 18, "kernel_util": [19, 20, 21, 22, 23], "compute_kernel": 19, "corrent_matrix": 20, "f_divergence_scor": 21, "kl_divergence_scor": 22, "von_neumann_diverg": 23, "monte_carlo": [24, 25], "generate_knn_in_subspac": 24, "restricted_nbr_permut": 25, "conditioningsetselect": 26, "fci": 27, "learnsemimarkovianskeleton": 28, "learnskeleton": 29, "make_context": 32, "metric": [33, 34], "confusion_matrix_network": 33, "structure_hamming_dist": 34, "column": 35, "networkxgraph": 36, "separatingset": 37, "content": 38, "get": 38, "start": 38, "team": 38, "indic": 38, "tabl": 38, "instal": 39, "tutori": [40, 42], "basic": 40, "model": 40, "refer": 41, "user": 43, "guid": 43, "releas": 44, "histori": 44, "what": 46, "": 46, "new": 46, "version": 46, "0": 46, "1": 46, "changelog": 46, "code": 46, "document": 46, "contributor": 46}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Context for causal discovery": [[0, "context-for-causal-discovery"]], "Constraint-based structure learning": [[0, "constraint-based-structure-learning"]], "Comparing causal discovery algorithms": [[0, "comparing-causal-discovery-algorithms"]], "Typing": [[0, "typing"]], "Graph protocols": [[0, "graph-protocols"]], "Conditional Testing": [[0, "conditional-testing"]], "Conditional Independence Testing": [[0, "conditional-independence-testing"]], "Conditional k-sample testing": [[0, "conditional-k-sample-testing"]], "Utilities": [[0, "utilities"]], "PC algorithm for causal discovery from observational data without latent confounders": [[1, "pc-algorithm-for-causal-discovery-from-observational-data-without-latent-confounders"], [41, "PC-algorithm-for-causal-discovery-from-observational-data-without-latent-confounders"]], "Simulate some data": [[1, "simulate-some-data"]], "Instantiate some conditional independence tests": [[1, "instantiate-some-conditional-independence-tests"], [41, "Instantiate-some-conditional-independence-tests"]], "Define the context": [[1, "define-the-context"], [41, "Define-the-context"]], "Run structure learning algorithm": [[1, "run-structure-learning-algorithm"]], "Independence": [[2, "independence"]], "Conditional Mutual Information": [[2, "conditional-mutual-information"]], "Partial (Pearson) Correlation": [[2, "partial-pearson-correlation"]], "Discrete, Categorical and Binary Data": [[2, "discrete-categorical-and-binary-data"], [2, "id6"]], "Kernel-Approaches": [[2, "kernel-approaches"], [2, "id7"]], "Classifier-based Approaches": [[2, "classifier-based-approaches"]], "Conditional Discrepancy": [[2, "conditional-discrepancy"]], "Bregman-Divergences": [[2, "bregman-divergences"]], "Constraint-based causal discovery": [[3, "module-dodiscover.constraint"]], "Fundamental Assumptions of Constraint-Based Causal Discovery": [[3, "fundamental-assumptions-of-constraint-based-causal-discovery"]], "(Non-parametric) Markovian SCMs with Observational Data": [[3, "non-parametric-markovian-scms-with-observational-data"]], "(Non-parametric) Semi-Markovian SCMs with Observational Data": [[3, "non-parametric-semi-markovian-scms-with-observational-data"]], "(Non-parametric) SCMs with Interventional Data": [[3, "non-parametric-scms-with-interventional-data"]], "Choosing the conditioning sets": [[3, "choosing-the-conditioning-sets"]], "Hyperparameters and controlling overfitting": [[3, "hyperparameters-and-controlling-overfitting"]], "Robust learning": [[3, "robust-learning"]], "dodiscover.ContextBuilder": [[4, "dodiscover-contextbuilder"]], "dodiscover.EquivalenceClass": [[5, "dodiscover-equivalenceclass"]], "dodiscover.Graph": [[6, "dodiscover-graph"]], "dodiscover.cd.BaseConditionalDiscrepancyTest": [[7, "dodiscover-cd-baseconditionaldiscrepancytest"]], "dodiscover.cd.BregmanCDTest": [[8, "dodiscover-cd-bregmancdtest"]], "dodiscover.cd.KernelCDTest": [[9, "dodiscover-cd-kernelcdtest"]], "dodiscover.ci.BaseConditionalIndependenceTest": [[10, "dodiscover-ci-baseconditionalindependencetest"]], "Examples using dodiscover.ci.BaseConditionalIndependenceTest": [[10, "examples-using-dodiscover-ci-baseconditionalindependencetest"]], "dodiscover.ci.CMITest": [[11, "dodiscover-ci-cmitest"]], "dodiscover.ci.CategoricalCITest": [[12, "dodiscover-ci-categoricalcitest"]], "dodiscover.ci.ClassifierCITest": [[13, "dodiscover-ci-classifiercitest"]], "dodiscover.ci.ClassifierCMITest": [[14, "dodiscover-ci-classifiercmitest"]], "dodiscover.ci.FisherZCITest": [[15, "dodiscover-ci-fisherzcitest"]], "dodiscover.ci.GSquareCITest": [[16, "dodiscover-ci-gsquarecitest"]], "Examples using dodiscover.ci.GSquareCITest": [[16, "examples-using-dodiscover-ci-gsquarecitest"]], "dodiscover.ci.KernelCITest": [[17, "dodiscover-ci-kernelcitest"]], "dodiscover.ci.Oracle": [[18, "dodiscover-ci-oracle"]], "Examples using dodiscover.ci.Oracle": [[18, "examples-using-dodiscover-ci-oracle"]], "dodiscover.ci.kernel_utils.compute_kernel": [[19, "dodiscover-ci-kernel-utils-compute-kernel"]], "dodiscover.ci.kernel_utils.corrent_matrix": [[20, "dodiscover-ci-kernel-utils-corrent-matrix"]], "dodiscover.ci.kernel_utils.f_divergence_score": [[21, "dodiscover-ci-kernel-utils-f-divergence-score"]], "dodiscover.ci.kernel_utils.kl_divergence_score": [[22, "dodiscover-ci-kernel-utils-kl-divergence-score"]], "dodiscover.ci.kernel_utils.von_neumann_divergence": [[23, "dodiscover-ci-kernel-utils-von-neumann-divergence"]], "dodiscover.ci.monte_carlo.generate_knn_in_subspace": [[24, "dodiscover-ci-monte-carlo-generate-knn-in-subspace"]], "dodiscover.ci.monte_carlo.restricted_nbr_permutation": [[25, "dodiscover-ci-monte-carlo-restricted-nbr-permutation"]], "dodiscover.constraint.ConditioningSetSelection": [[26, "dodiscover-constraint-conditioningsetselection"]], "dodiscover.constraint.FCI": [[27, "dodiscover-constraint-fci"]], "dodiscover.constraint.LearnSemiMarkovianSkeleton": [[28, "dodiscover-constraint-learnsemimarkovianskeleton"]], "dodiscover.constraint.LearnSkeleton": [[29, "dodiscover-constraint-learnskeleton"]], "dodiscover.constraint.PC": [[30, "dodiscover-constraint-pc"]], "dodiscover.context.Context": [[31, "dodiscover-context-context"]], "dodiscover.make_context": [[32, "dodiscover-make-context"]], "Examples using dodiscover.make_context": [[32, "examples-using-dodiscover-make-context"]], "dodiscover.metrics.confusion_matrix_networks": [[33, "dodiscover-metrics-confusion-matrix-networks"]], "dodiscover.metrics.structure_hamming_dist": [[34, "dodiscover-metrics-structure-hamming-dist"]], "dodiscover.typing.Column": [[35, "dodiscover-typing-column"]], "dodiscover.typing.NetworkxGraph": [[36, "dodiscover-typing-networkxgraph"]], "dodiscover.typing.SeparatingSet": [[37, "dodiscover-typing-separatingset"]], "dodiscover": [[38, "dodiscover"]], "Contents": [[38, "contents"]], "Getting started:": [[38, null]], "Team": [[38, "team"]], "Indices and tables": [[38, "indices-and-tables"]], "Installation": [[39, "installation"]], "Tutorials": [[40, "tutorials"]], "Basic causal discovery models without latent confounders": [[40, "basic-causal-discovery-models-without-latent-confounders"]], "Run discovery algorithm": [[41, "Run-discovery-algorithm"]], "References": [[41, "References"]], "Examples and Tutorials using DoDiscover": [[42, "examples-and-tutorials-using-dodiscover"]], "Examples": [[42, "examples"]], "User Guide": [[43, "user-guide"]], "Release History": [[44, "release-history"]], "What\u2019s new?": [[46, "what-s-new"]], "Version 0.1": [[46, "version-0-1"]], "Changelog": [[46, "changelog"]], "Code and Documentation Contributors": [[46, "code-and-documentation-contributors"]]}, "indexentries": {"dodiscover": [[0, "module-dodiscover"]], "module": [[0, "module-dodiscover"], [3, "module-dodiscover.constraint"]], "dodiscover.constraint": [[3, "module-dodiscover.constraint"]], "contextbuilder (class in dodiscover)": [[4, "dodiscover.ContextBuilder"]], "build() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.build"]], "edges() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.edges"]], "excluded_edges() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.excluded_edges"]], "included_edges() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.included_edges"]], "init_graph() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.init_graph"]], "latent_variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.latent_variables"]], "observed_variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.observed_variables"]], "state_variable() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.state_variable"]], "state_variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.state_variables"]], "variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.variables"]], "equivalenceclass (class in dodiscover)": [[5, "dodiscover.EquivalenceClass"]], "add_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.add_edge"]], "add_node() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.add_node"]], "bidirected_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.bidirected_edge_name"]], "circle_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.circle_edge_name"]], "copy() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.copy"]], "directed_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.directed_edge_name"]], "edges() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.edges"]], "excluded_triples (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.excluded_triples"]], "has_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.has_edge"]], "mark_unfaithful_triple() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.mark_unfaithful_triple"]], "neighbors() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.neighbors"]], "nodes (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.nodes"]], "orient_uncertain_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.orient_uncertain_edge"]], "predecessors() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.predecessors"]], "remove_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.remove_edge"]], "remove_edges_from() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.remove_edges_from"]], "remove_node() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.remove_node"]], "subgraph() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.subgraph"]], "successors() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.successors"]], "to_undirected() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.to_undirected"]], "undirected_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.undirected_edge_name"]], "graph (class in dodiscover)": [[6, "dodiscover.Graph"]], "add_edge() (dodiscover.graph method)": [[6, "dodiscover.Graph.add_edge"]], "add_node() (dodiscover.graph method)": [[6, "dodiscover.Graph.add_node"]], "copy() (dodiscover.graph method)": [[6, "dodiscover.Graph.copy"]], "edges() (dodiscover.graph method)": [[6, "dodiscover.Graph.edges"]], "has_edge() (dodiscover.graph method)": [[6, "dodiscover.Graph.has_edge"]], "neighbors() (dodiscover.graph method)": [[6, "dodiscover.Graph.neighbors"]], "nodes (dodiscover.graph property)": [[6, "dodiscover.Graph.nodes"]], "remove_edge() (dodiscover.graph method)": [[6, "dodiscover.Graph.remove_edge"]], "remove_edges_from() (dodiscover.graph method)": [[6, "dodiscover.Graph.remove_edges_from"]], "remove_node() (dodiscover.graph method)": [[6, "dodiscover.Graph.remove_node"]], "subgraph() (dodiscover.graph method)": [[6, "dodiscover.Graph.subgraph"]], "to_undirected() (dodiscover.graph method)": [[6, "dodiscover.Graph.to_undirected"]], "baseconditionaldiscrepancytest (class in dodiscover.cd)": [[7, "dodiscover.cd.BaseConditionalDiscrepancyTest"]], "compute_null() (dodiscover.cd.baseconditionaldiscrepancytest method)": [[7, "dodiscover.cd.BaseConditionalDiscrepancyTest.compute_null"]], "test() (dodiscover.cd.baseconditionaldiscrepancytest method)": [[7, "dodiscover.cd.BaseConditionalDiscrepancyTest.test"]], "bregmancdtest (class in dodiscover.cd)": [[8, "dodiscover.cd.BregmanCDTest"]], "compute_null() (dodiscover.cd.bregmancdtest method)": [[8, "dodiscover.cd.BregmanCDTest.compute_null"]], "test() (dodiscover.cd.bregmancdtest method)": [[8, "dodiscover.cd.BregmanCDTest.test"]], "kernelcdtest (class in dodiscover.cd)": [[9, "dodiscover.cd.KernelCDTest"]], "compute_null() (dodiscover.cd.kernelcdtest method)": [[9, "dodiscover.cd.KernelCDTest.compute_null"]], "test() (dodiscover.cd.kernelcdtest method)": [[9, "dodiscover.cd.KernelCDTest.test"]], "baseconditionalindependencetest (class in dodiscover.ci)": [[10, "dodiscover.ci.BaseConditionalIndependenceTest"]], "test() (dodiscover.ci.baseconditionalindependencetest method)": [[10, "dodiscover.ci.BaseConditionalIndependenceTest.test"]], "cmitest (class in dodiscover.ci)": [[11, "dodiscover.ci.CMITest"]], "test() (dodiscover.ci.cmitest method)": [[11, "dodiscover.ci.CMITest.test"]], "categoricalcitest (class in dodiscover.ci)": [[12, "dodiscover.ci.CategoricalCITest"]], "test() (dodiscover.ci.categoricalcitest method)": [[12, "dodiscover.ci.CategoricalCITest.test"]], "classifiercitest (class in dodiscover.ci)": [[13, "dodiscover.ci.ClassifierCITest"]], "generate_train_test_data() (dodiscover.ci.classifiercitest method)": [[13, "dodiscover.ci.ClassifierCITest.generate_train_test_data"]], "test() (dodiscover.ci.classifiercitest method)": [[13, "dodiscover.ci.ClassifierCITest.test"]], "classifiercmitest (class in dodiscover.ci)": [[14, "dodiscover.ci.ClassifierCMITest"]], "generate_train_test_data() (dodiscover.ci.classifiercmitest method)": [[14, "dodiscover.ci.ClassifierCMITest.generate_train_test_data"]], "test() (dodiscover.ci.classifiercmitest method)": [[14, "dodiscover.ci.ClassifierCMITest.test"]], "fisherzcitest (class in dodiscover.ci)": [[15, "dodiscover.ci.FisherZCITest"]], "test() (dodiscover.ci.fisherzcitest method)": [[15, "dodiscover.ci.FisherZCITest.test"]], "gsquarecitest (class in dodiscover.ci)": [[16, "dodiscover.ci.GSquareCITest"]], "test() (dodiscover.ci.gsquarecitest method)": [[16, "dodiscover.ci.GSquareCITest.test"]], "kernelcitest (class in dodiscover.ci)": [[17, "dodiscover.ci.KernelCITest"]], "test() (dodiscover.ci.kernelcitest method)": [[17, "dodiscover.ci.KernelCITest.test"]], "oracle (class in dodiscover.ci)": [[18, "dodiscover.ci.Oracle"]], "test() (dodiscover.ci.oracle method)": [[18, "dodiscover.ci.Oracle.test"]], "compute_kernel() (in module dodiscover.ci.kernel_utils)": [[19, "dodiscover.ci.kernel_utils.compute_kernel"]], "corrent_matrix() (in module dodiscover.ci.kernel_utils)": [[20, "dodiscover.ci.kernel_utils.corrent_matrix"]], "f_divergence_score() (in module dodiscover.ci.kernel_utils)": [[21, "dodiscover.ci.kernel_utils.f_divergence_score"]], "kl_divergence_score() (in module dodiscover.ci.kernel_utils)": [[22, "dodiscover.ci.kernel_utils.kl_divergence_score"]], "von_neumann_divergence() (in module dodiscover.ci.kernel_utils)": [[23, "dodiscover.ci.kernel_utils.von_neumann_divergence"]], "generate_knn_in_subspace() (in module dodiscover.ci.monte_carlo)": [[24, "dodiscover.ci.monte_carlo.generate_knn_in_subspace"]], "restricted_nbr_permutation() (in module dodiscover.ci.monte_carlo)": [[25, "dodiscover.ci.monte_carlo.restricted_nbr_permutation"]], "complete (dodiscover.constraint.conditioningsetselection attribute)": [[26, "dodiscover.constraint.ConditioningSetSelection.COMPLETE"]], "conditioningsetselection (class in dodiscover.constraint)": [[26, "dodiscover.constraint.ConditioningSetSelection"]], "nbrs (dodiscover.constraint.conditioningsetselection attribute)": [[26, "dodiscover.constraint.ConditioningSetSelection.NBRS"]], "nbrs_path (dodiscover.constraint.conditioningsetselection attribute)": [[26, "dodiscover.constraint.ConditioningSetSelection.NBRS_PATH"]], "pds (dodiscover.constraint.conditioningsetselection attribute)": [[26, "dodiscover.constraint.ConditioningSetSelection.PDS"]], "pds_path (dodiscover.constraint.conditioningsetselection attribute)": [[26, "dodiscover.constraint.ConditioningSetSelection.PDS_PATH"]], "fci (class in dodiscover.constraint)": [[27, "dodiscover.constraint.FCI"]], "evaluate_edge() (dodiscover.constraint.fci method)": [[27, "dodiscover.constraint.FCI.evaluate_edge"]], "fit() (dodiscover.constraint.fci method)": [[27, "dodiscover.constraint.FCI.fit"]], "learn_skeleton() (dodiscover.constraint.fci method)": [[27, "dodiscover.constraint.FCI.learn_skeleton"]], "orient_edges() (dodiscover.constraint.fci method)": [[27, "dodiscover.constraint.FCI.orient_edges"]], "orient_unshielded_triples() (dodiscover.constraint.fci method)": [[27, "dodiscover.constraint.FCI.orient_unshielded_triples"]], "learnsemimarkovianskeleton (class in dodiscover.constraint)": [[28, "dodiscover.constraint.LearnSemiMarkovianSkeleton"]], "evaluate_edge() (dodiscover.constraint.learnsemimarkovianskeleton method)": [[28, "dodiscover.constraint.LearnSemiMarkovianSkeleton.evaluate_edge"]], "fit() (dodiscover.constraint.learnsemimarkovianskeleton method)": [[28, "dodiscover.constraint.LearnSemiMarkovianSkeleton.fit"]], "learnskeleton (class in dodiscover.constraint)": [[29, "dodiscover.constraint.LearnSkeleton"]], "evaluate_edge() (dodiscover.constraint.learnskeleton method)": [[29, "dodiscover.constraint.LearnSkeleton.evaluate_edge"]], "fit() (dodiscover.constraint.learnskeleton method)": [[29, "dodiscover.constraint.LearnSkeleton.fit"]], "pc (class in dodiscover.constraint)": [[30, "dodiscover.constraint.PC"]], "convert_skeleton_graph() (dodiscover.constraint.pc method)": [[30, "dodiscover.constraint.PC.convert_skeleton_graph"]], "evaluate_edge() (dodiscover.constraint.pc method)": [[30, "dodiscover.constraint.PC.evaluate_edge"]], "fit() (dodiscover.constraint.pc method)": [[30, "dodiscover.constraint.PC.fit"]], "learn_skeleton() (dodiscover.constraint.pc method)": [[30, "dodiscover.constraint.PC.learn_skeleton"]], "orient_edges() (dodiscover.constraint.pc method)": [[30, "dodiscover.constraint.PC.orient_edges"]], "orient_unshielded_triples() (dodiscover.constraint.pc method)": [[30, "dodiscover.constraint.PC.orient_unshielded_triples"]], "context (class in dodiscover.context)": [[31, "dodiscover.context.Context"]], "__hash__() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.__hash__"]], "add_state_variable() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.add_state_variable"]], "copy() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.copy"]], "get_non_f_nodes() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.get_non_f_nodes"]], "get_params() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.get_params"]], "reverse_sigma_map() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.reverse_sigma_map"]], "set_params() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.set_params"]], "state_variable() (dodiscover.context.context method)": [[31, "dodiscover.context.Context.state_variable"]], "make_context() (in module dodiscover)": [[32, "dodiscover.make_context"]], "confusion_matrix_networks() (in module dodiscover.metrics)": [[33, "dodiscover.metrics.confusion_matrix_networks"]], "structure_hamming_dist() (in module dodiscover.metrics)": [[34, "dodiscover.metrics.structure_hamming_dist"]], "column (in module dodiscover.typing)": [[35, "dodiscover.typing.Column"]], "networkxgraph (in module dodiscover.typing)": [[36, "dodiscover.typing.NetworkxGraph"]], "separatingset (in module dodiscover.typing)": [[37, "dodiscover.typing.SeparatingSet"]]}})